{
  "openapi": "3.0.3",
  "info": {
    "title": "Inventory Service API",
    "description": "This is the specification of the Inventory Service API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "{server}",
      "variables": {
        "server": {
          "default": "https://api.gateway.orchestration.prod-eu10.hanacloud.ondemand.com",
          "description": "address of the service behind the api-gateway"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "serviceOfferings",
      "description": "Handling service plans"
    },
    {
      "name": "serviceInstances",
      "description": "Handling service instances"
    },
    {
      "name": "operations",
      "description": "Handling operation status"
    }
  ],
  "paths": {
    "/inventory/v1/serviceOfferings": {
      "get": {
        "tags": [
          "serviceOfferings"
        ],
        "summary": "List service plans and metadata",
        "description": "This returns all of the service plans, along with their metadata and update/create schemas, that are available in the current subdomain. Required scope: ServiceOffering.Read",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "ServiceOffering.Read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/Count"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Identifier for a specific version of a resource."
              },
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "description": "Describes the caching directives - supported max-age, private, no-cache and no-store"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "description": "Catalog changes in broker for spark related plans: https://github.wdf.sap.corp/hanadatalake/hana-cloud-servicebroker/blob/master/base/catalog.json#L2943",
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of items."
                    },
                    "items": {
                      "$ref": "#/components/schemas/ServiceOfferingList"
                    }
                  },
                  "required": [
                    "items"
                  ]
                },
                "examples": {
                  "example": {
                    "$ref": "#/components/examples/ServiceOfferingListResponse"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/ResourceNotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestGeneric"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/v1/serviceOfferings/{servicePlanName}/productVersions": {
      "get": {
        "tags": [
          "serviceOfferings"
        ],
        "summary": "List product versions available for provisioning",
        "description": "This returns all of the product versions for the specified plan that are available to be provisioned in the specified context.",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "ServiceOffering.Read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ServicePlanName"
          },
          {
            "$ref": "#/components/parameters/HcContext"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Identifier for a specific version of a resource."
              },
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "description": "Describes the caching directives - supported max-age, private, no-cache and no-store"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVersionList"
                },
                "examples": {
                  "example": {
                    "$ref": "#/components/examples/ProductVersionListResponse"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/ResourceNotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestIncorrectParameterForGetVersions"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/v1/serviceOfferings/{servicePlanName}/productPlugins": {
      "get": {
        "tags": [
          "serviceOfferings"
        ],
        "summary": "List product plugins available for deploying on given HANA Instance",
        "description": "Retrieves the product plugins available to be deployed for the specified version of the specified service plan.",
        "security": [
          {
            "oAuth2ClientCredentials": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ServicePlanName"
          },
          {
            "$ref": "#/components/parameters/HcContext"
          },
          {
            "$ref": "#/components/parameters/ProductVersion"
          },
          {
            "$ref": "#/components/parameters/PluginFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Identifier for a specific version of a resource."
              },
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "description": "Describes the caching directives - supported max-age, private, no-cache and no-store"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPlugin"
                },
                "examples": {
                  "example": {
                    "$ref": "#/components/examples/ProductPluginsResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Resource was not modified."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestIncorrectParameterForGetVersions"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/PluginsNotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/v1/serviceInstances": {
      "get": {
        "tags": [
          "serviceInstances"
        ],
        "summary": "List service instances",
        "description": "This returns the list of instances available in the subdomain. For each instance, it returns details and the raw CR. Required scope: ServiceInstance.Read",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "ServiceInstance.Read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/Count"
          },
          {
            "$ref": "#/components/parameters/Filter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Identifier for a specific version of a resource."
              },
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "description": "Describes the caching directives - supported max-age, private, no-cache and no-store"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "description": "SparkInstance CRD: https://github.wdf.sap.corp/bigdataservices/bds-product-operator-crds/blob/master/helm/bds-product-operator-crds/templates/bds.sap.com_sparkinstances.yaml \n Spark History Server CRD: https://github.wdf.sap.corp/bigdataservices/bds-product-operator-crds/blob/master/helm/bds-product-operator-crds/templates/bds.sap.com_sparkhistoryservers.yaml",
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of results."
                    },
                    "items": {
                      "$ref": "#/components/schemas/ServiceInstanceList"
                    }
                  },
                  "required": [
                    "items"
                  ]
                },
                "examples": {
                  "example": {
                    "$ref": "#/components/examples/ServiceInstanceListResponse"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/ResourceNotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestGeneric"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "serviceInstances"
        ],
        "summary": "Create a service instance",
        "description": "Create a new service instance over the service manager.Required scope: ServiceInstance.Manage",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "ServiceInstance.Manage"
            ]
          }
        ],
        "requestBody": {
          "description": "Details of the service instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the new service instance.",
                    "pattern": "^[a-z][a-z0-9]{0,15}$"
                  },
                  "servicePlanId": {
                    "type": "string",
                    "description": "The ID of the service plan to use for the service instance."
                  },
                  "parameters": {
                    "type": "object",
                    "description": "Additional configuration parameters - accepts the same structure as the Service Manager.",
                    "additionalProperties": true
                  }
                },
                "required": [
                  "name",
                  "servicePlanId"
                ]
              },
              "examples": {
                "example": {
                  "$ref": "#/components/examples/ServiceInstanceCreateRequest"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation of a resource.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "Points to the created resource."
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestCreateInstance"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/v1/serviceInstances/{serviceInstanceID}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ServiceInstanceID"
        }
      ],
      "get": {
        "tags": [
          "serviceInstances"
        ],
        "summary": "Get a service instance",
        "description": "This returns Service Manager details and the raw CR for one service instance.Required scope: ServiceInstance.Read",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "ServiceInstance.Read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Identifier for a specific version of a resource."
              },
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "description": "Describes the caching directives - supported max-age, private, no-cache and no-store"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInstance"
                },
                "examples": {
                  "example": {
                    "$ref": "#/components/examples/ServiceInstanceResponse"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/ResourceNotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestGeneric"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "patch": {
        "tags": [
          "serviceInstances"
        ],
        "summary": "Update a service instance",
        "description": "Update an existing service instance over the service manager.Required scope: ServiceInstance.Manage",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "ServiceInstance.Manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/IfMatch"
          }
        ],
        "requestBody": {
          "description": "Details of the service instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the service instance to update.",
                    "pattern": "^[a-z][a-z0-9]{0,15}$"
                  },
                  "servicePlanId": {
                    "type": "string",
                    "description": "The ID of the service plan for the service instance to update."
                  },
                  "parameters": {
                    "type": "object",
                    "description": "Additional configuration parameters - accepts the same structure as the Service Manager.",
                    "additionalProperties": true
                  }
                }
              },
              "examples": {
                "HANA update Request": {
                  "$ref": "#/components/examples/ServiceInstanceUpdateRequest"
                },
                "HANA Plugin Upgrade Request":{
                  "$ref": "#/components/examples/PluginUpgradeRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "Points to the updated resource id."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestUpdateInstance"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/ResourceConflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntityUpdateInstance"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "serviceInstances"
        ],
        "summary": "Delete a service instance",
        "description": "This deletes the service instance with the given instance ID.Required scope: ServiceInstance.Manage",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "ServiceInstance.Manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/IfMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestDeleteInstance"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/ResourceConflict"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/v1/serviceInstances/{serviceInstanceID}/productVersions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ServiceInstanceID"
        }
      ],
      "get": {
        "tags": [
          "serviceInstances"
        ],
        "summary": "Get versions available for service instance upgrade",
        "description": "This returns which product versions are available as upgrade targets for the specified service instance",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "ServiceInstance.Read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Identifier for a specific version of a resource."
              },
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "description": "Describes the caching directives - supported max-age, private, no-cache and no-store"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVersionList"
                },
                "examples": {
                  "example": {
                    "$ref": "#/components/examples/ProductVersionUpgradeListResponse"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/ResourceNotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestGeneric"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/v1/serviceInstances/{serviceInstanceID}/adminPassword": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ServiceInstanceID"
        }
      ],
      "patch": {
        "tags": [
          "serviceInstances"
        ],
        "summary": "Update Admin password",
        "description": "Update the admin password of existing service instance over the scope: ServiceInstance.AdminPassword",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "ServiceInstance.AdminPassword"
            ]
          }
        ],
        "requestBody": {
          "description": "Admin Password of the service instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "adminPassword": {
                    "type": "string",
                    "description": "The Password to be updated ",
                    "pattern": "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$"
                  }
                }
              },
              "examples": {
                "example": {
                  "$ref": "#/components/examples/ServiceInstanceAdminPassword"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "Points to the updated resource id."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestUpdateInstance"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/ResourceConflict"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPassword"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/inventory/v1/operations/{operationID}":{
      "parameters": [
        {
          "$ref": "#/components/parameters/operationID"
        }
      ],
      "get": {
        "tags": [
          "operations"
        ],
        "summary": "Get the password reset operation status ",
        "description": "This returns the operation status of the admin password reset feature by hc-instance-manager",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "ServiceInstance.AdminPassword"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/operationResponse"
                },
                "examples": {
                  "example": {
                    "$ref": "#/components/examples/operationSampleResponse"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestGeneric"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/ConflictError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          },
          "503": {
            "$ref": "#/components/responses/OperationNotFound"
          }
        }
      } 
    }
  },
  "components": {
    "schemas": {
      "ServiceOfferingList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ServiceOffering"
        }
      },
      "ServiceOffering": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string"
              },
              "documentationUrl": {
                "type": "string"
              },
              "imageUrl": {
                "type": "string"
              },
              "longDescription": {
                "type": "string"
              },
              "providerDisplayName": {
                "type": "string"
              },
              "sap": {
                "type": "object",
                "properties": {
                  "HANACloud": {
                    "type": "object",
                    "properties": {
                      "hyperscaler": {
                        "type": "string"
                      },
                      "landscape": {
                        "type": "string"
                      },
                      "region": {
                        "type": "string"
                      }
                    }
                  },
                  "cockpitUrl": {
                    "type": "string"
                  },
                  "hasFreeTier": {
                    "type": "boolean"
                  },
                  "instanceIsolation": {
                    "type": "boolean"
                  },
                  "omitTdPlans": {
                    "type": "boolean"
                  },
                  "tenantAware": {
                    "type": "boolean"
                  }
                }
              },
              "supportUrl": {
                "type": "string"
              }
            }
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServicePlan"
            }
          }
        }
      },
      "ServicePlan": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "UI": {
                "type": "object",
                "description": "Availability zones, configurations and instance sizes (all optional) depending on the plan type.",
                "additionalProperties": true
              },
              "bullets": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "sap": {
                "type": "object",
                "description": "Details about the plan offering (e.g. crd name)",
                "additionalProperties": true
              },
              "supportedMinOSBVersion": {
                "type": "string"
              },
              "supportedPlatforms": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "schemas": {
            "type": "object",
            "properties": {
              "serviceInstance": {
                "type": "object",
                "properties": {
                  "create": {
                    "type": "object",
                    "description": "Create Schema API definition.",
                    "properties": {
                      "parameters": {
                        "$ref": "#/components/schemas/ServicePlanParameter"
                      }
                    }
                  },
                  "update": {
                    "type": "object",
                    "description": "Update Schema API definition.",
                    "properties": {
                      "parameters": {
                        "$ref": "#/components/schemas/ServicePlanParameter"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ServicePlanParameter": {
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "additionalProperties": {
            "type": "boolean"
          },
          "definitions": {
            "type": "object",
            "description": "Define additional settings like extensionervice and ips - optional for most plans.",
            "additionalProperties": true
          },
          "properties": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "description": "Define plan specific CRD content.",
                "additionalProperties": true
              },
              "metadata": {
                "type": "object",
                "description": "Define properties.",
                "additionalProperties": true
              }
            }
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ProductVersion": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "releaseCycle": {
            "type": "string"
          },
          "track": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "incompatiblePlugins":{
            "type": "array",
            "items": {
              "type": "string"
            },
            "description" : "This field maps to the data.versions.name of GET /inventory/v1/serviceOfferings/{servicePlanName}/productPlugins endpoint"
          }
        }
      },
      "ProductPlugin":{
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "displayName":{
            "type": "string"
          },
          "versions":{
            "type": "array",
            "items":{
              "properties":{
                "name":{
                  "type": "string"
                },
                "version":{
                  "type": "string"
                },
                "description":{
                  "type": "string"
                },
                "displayName":{
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "operationStatus": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "object",
            "properties": {
              "state": {
                "type":"string"
              },
              "description": {
                "type":"string"
              },
              "startTimestamp": {
                "type":"string"
              }
            }
          }
        }
      },
      "ProductVersionList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVersion"
            }
          }
        }
      },
      "operationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/operationStatus"
            }
          }
        }
      },
      "ServiceInstanceList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ServiceInstance"
        }
      },
      "ServiceInstance": {
        "type": "object",
        "properties": {
          "resource": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContainerGroupResource"
              },
              {
                "$ref": "#/components/schemas/DatalakeResource"
              },
              {
                "$ref": "#/components/schemas/HanaServiceResource"
              },
              {
                "$ref": "#/components/schemas/SparkInstanceResource"
              },
              {
                "$ref": "#/components/schemas/SparkHistoryServerResource"
              }
            ]
          },
          "details": {
            "$ref": "#/components/schemas/ServiceManagerDetails"
          }
        },
        "required": [
          "resource",
          "details"
        ]
      },
      "ServiceManagerDetails": {
        "type": "object",
        "description": "Instance details from the Service Manager.",
        "properties": {
          "id": {
            "type": "string"
          },
          "ready": {
            "type": "boolean"
          },
          "lastOperation": {
            "type": "object",
            "description": "Contains details about the last operation on this service. Only contained when requesting a single resource",
            "additionalProperties": true
          },
          "name": {
            "type": "string"
          },
          "servicePlanId": {
            "type": "string"
          },
          "platformId": {
            "type": "string"
          },
          "dashboardUrl": {
            "type": "string"
          },
          "referencedInstanceId": {
            "type": "string"
          },
          "shared": {
            "type": "boolean"
          },
          "context": {
            "type": "object",
            "description": "Contextual data for the resource.",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "maintenanceInfo": {
            "type": "object",
            "description": "The maintenance info for the resource.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "usable": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Format is YYYY-MM-DDThh:mm:ssTZD"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Format is YYYY-MM-DDThh:mm:ssTZD"
          },
          "labels": {
            "type": "object",
            "description": "Additional data associated with the resource entity.",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ServiceMetadata": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Contains the annotations of the CR."
          },
          "creationTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "generation": {
            "type": "integer"
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Contains the labels of the CR."
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "resourceVersion": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "ServiceStatusConditionAlternate": {
        "type": "object",
        "description": "Detailed condition, individual for each service instance type",
        "properties": {
          "lastTransitionTime": {
            "description": "Time the condition transitioned into the current state",
            "format": "date-time",
            "type": "string"
          },
          "message": {
            "description": "Message describing the Reason of the state",
            "type": "string"
          },
          "reason": {
            "description": "One word Reason why the condition has the specific state",
            "type": "string"
          },
          "status": {
            "description": "Status of the condition",
            "type": "string"
          },
          "type": {
            "description": "The type of the Condition",
            "type": "string"
          }
        }
      },
      "ServiceStatusCondition": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "lastProbeTime": {
                "description": "Time the condition was lastly checked",
                "format": "date-time",
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/ServiceStatusConditionAlternate"
          }
        ]
      },
      "ContainerGroupResource": {
        "type": "object",
        "description": "Transformed content of the ContainerGroup custom resource.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/ServiceMetadata"
          },
          "spec": {
            "$ref": "#/components/schemas/ContainerGroupSpec"
          },
          "status": {
            "type": "object",
            "properties": {
              "conditions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceStatusCondition"
                }
              },
              "name": {
                "type": "string"
              },
              "observedGeneration": {
                "type": "integer",
                "format": "int64"
              },
              "upgradeCheckRunAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      },
      "ContainerGroupSpec": {
        "type": "object",
        "description": "Specification of the desired state of the ContainerGroup.",
        "properties": {
          "datalakeID": {
            "type": "string"
          },
          "hanaID": {
            "type": "string"
          },
          "hanaUser": {
            "type": "string"
          },
          "datalakeUser": {
            "type": "string"
          }
        }
      },
      "DatalakeResource": {
        "type": "object",
        "description": "Transformed content of the Datalake custom resource.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/ServiceMetadata"
          },
          "spec": {
            "$ref": "#/components/schemas/DatalakeSpec"
          },
          "status": {
            "type": "object",
            "properties": {
              "conditions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceStatusCondition"
                }
              },
              "endpoints": {
                "type": "object",
                "properties": {
                  "sql": {
                    "type": "string"
                  }
                },
                "additionalProperties": {
                  "type": "string"
                }
              },
              "bnrGeneration": {
                "type": "integer",
                "format": "int64"
              },
              "bnrResourceVersion": {
                "type": "string"
              },
              "bnrStatus": {
                "$ref": "#/components/schemas/DatalakeBnrStatus"
              },
              "mpxGeneration": {
                "type": "integer",
                "format": "int64"
              },
              "mpxResourceVersion": {
                "type": "string"
              },
              "mpxStatus": {
                "$ref": "#/components/schemas/DatalakeMpxStatus"
              },
              "observedGeneration": {
                "type": "integer",
                "format": "int64"
              },
              "sofEnabled": {
                "type": "boolean"
              },
              "storageIoMeterAsEgress": {
                "type": "boolean"
              },
              "storageMetric": {
                "type": "string"
              }
            }
          }
        }
      },
      "DatalakeSpec": {
        "type": "object",
        "description": "Defines the desired state of the Datalake",
        "properties": {
          "serviceStopped": {
            "description": "Describes if the system should be running or stopped",
            "type": "boolean"
          },
          "versionIndicator": {
            "description": "Requested version for the HANA relational data lake Server",
            "type": "string"
          },
          "provisionedSizeBytes": {
            "description": "Size of IQ persistence in bytes.",
            "type": "integer"
          },
          "coordinatorType": {
            "description": "Node size for IQ co-ordinators:  one of small, medium, large, xlarge, 2xlarge or 3xlarge.",
            "type": "string"
          },
          "numCoordinators": {
            "description": "Number of IQ co-ordinators.",
            "type": "integer"
          },
          "numReaders": {
            "description": "Number of IQ readers.",
            "type": "integer"
          },
          "numWriters": {
            "description": "Number of IQ writers.",
            "type": "integer"
          },
          "provisionedSizeGib": {
            "description": "Size of IQ persistence in GiB.",
            "type": "integer"
          },
          "readerType": {
            "description": "Node size for IQ readers:  one of small, medium, large, xlarge, 2xlarge or 3xlarge.",
            "type": "string"
          },
          "writerType": {
            "description": "Node size for IQ writers:  one of small, medium, large, xlarge, 2xlarge or 3xlarge.",
            "type": "string"
          },
          "initOptions": {
            "type": "object",
            "description": "database init option to be used in CREATE DATABASE statement",
            "properties": {
              "collation": {
                "description": "Collation to be used in database in HDL.",
                "type": "string"
              },
              "caseSensitivity": {
                "description": "Case Sensitivity in database in HDL",
                "type": "string"
              },
              "ncharCollation": {
                "description": "NCHAR Collation is used in SQLAnywhere DB in HDL",
                "type": "string"
              },
              "ncharLocale": {
                "description": "Locale is used when [NCHAR Collation=UCA] in SQLAnywhere DB in HDL",
                "type": "string"
              },
              "ncharCaseSensitivity": {
                "description": "Case Sensitivity is used when [NCHAR Collation=UCA] in SQLAnywhere DB in HDL",
                "type": "string"
              },
              "ncharAccentSensitivity": {
                "description": "Accent Sensitivity is used when [NCHAR Collation=UCA] in SQLAnywhere DB in HDL",
                "type": "string"
              },
              "ncharPunctuationSensitivity": {
                "description": "Punctuation Sensitivity is used when [NCHAR Collation=UCA] in SQLAnywhere DB in HDL",
                "type": "string"
              },
              "ncharSortType": {
                "description": "Sort Type is used when [NCHAR Collation=UCA] in SQLAnywhere DB in HDL",
                "type": "string"
              },
              "blankPadding": {
                "description": "Blank Padding to be used in HDL",
                "type": "string"
              },
              "iqPageSize": {
                "description": "IQ Page size for IQ",
                "type": "integer"
              }
            }
          },
          "internal": {
            "properties": {
                "triggeredSequence": {
                    "properties": {
                        "arguments": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "description": "Optional free-formed string of parameter(s) to pass to the underlying triggered container",
                            "type": "object"
                        },
                        "initialState": {
                            "description": "Starting state for a triggered sequence to enter",
                            "type": "string"
                        },
                        "timestamp": {
                            "description": "Current timestamp to allow monitoring for completion",
                            "type": "string"
                        }
                    },
                    "required": [
                        "initialState",
                        "timestamp"
                    ],
                    "type": "object"
                }
            },
            "type": "object"
        },
          "mpxCoord": {
            "type": "object",
            "description": "MpxCoordinator group configuration Note: replica count is always 1",
            "properties": {
              "customTunableOptions": {
                "properties": {
                  "iqtc": {
                    "description": "Size of Temp Cache in MB.",
                    "type": "integer"
                  },
                  "iqmc": {
                    "description": "Size of Main Cache in MB.",
                    "type": "integer"
                  },
                  "iqmt": {
                    "description": "Specifies the number of SAP Sybase IQ threads to create.",
                    "type": "integer"
                  },
                  "iqlm": {
                    "description": "Size of IQ Large memory for Load Operations in MB.",
                    "type": "integer"
                  },
                  "gm": {
                    "description": "Number of client connections.",
                    "type": "integer"
                  },
                  "iqpartition": {
                    "description": "Sets the number of IQ main and temp buffer cache partitions. Should be in power of 2",
                    "type": "integer"
                  },
                  "iqgovern": {
                    "description": "Sets the number of concurrent queries allowed by the server.",
                    "type": "integer"
                  },
                  "iqnumbercpus": {
                    "description": "Number of cpus available for IQ server.",
                    "type": "integer"
                  }
                }
              }
            }
          },
          "mpxWriters": {
            "type": "object",
            "description": "MpxWriter group configuration",
            "properties": {
              "customTunableOptions": {
                "properties": {
                  "iqtc": {
                    "description": "Size of Temp Cache in MB.",
                    "type": "integer"
                  },
                  "iqmc": {
                    "description": "Size of Main Cache in MB.",
                    "type": "integer"
                  },
                  "iqmt": {
                    "description": "Specifies the number of SAP Sybase IQ threads to create.",
                    "type": "integer"
                  },
                  "iqlm": {
                    "description": "Size of IQ Large memory for Load Operations in MB.",
                    "type": "integer"
                  },
                  "gm": {
                    "description": "Number of client connections.",
                    "type": "integer"
                  },
                  "iqpartition": {
                    "description": "Sets the number of IQ main and temp buffer cache partitions. Should be in power of 2",
                    "type": "integer"
                  },
                  "iqgovern": {
                    "description": "Sets the number of concurrent queries allowed by the server.",
                    "type": "integer"
                  },
                  "iqnumbercpus": {
                    "description": "Number of cpus available for IQ server.",
                    "type": "integer"
                  }
                }
              }
            }
          },
          "mpxReaders": {
            "type": "object",
            "description": "MpxReader group configuration",
            "properties": {
              "customTunableOptions": {
                "properties": {
                  "iqtc": {
                    "description": "Size of Temp Cache in MB.",
                    "type": "integer"
                  },
                  "iqmc": {
                    "description": "Size of Main Cache in MB.",
                    "type": "integer"
                  },
                  "iqmt": {
                    "description": "Specifies the number of SAP Sybase IQ threads to create.",
                    "type": "integer"
                  },
                  "iqlm": {
                    "description": "Size of IQ Large memory for Load Operations in MB.",
                    "type": "integer"
                  },
                  "gm": {
                    "description": "Number of client connections.",
                    "type": "integer"
                  },
                  "iqpartition": {
                    "description": "Sets the number of IQ main and temp buffer cache partitions. Should be in power of 2",
                    "type": "integer"
                  },
                  "iqgovern": {
                    "description": "Sets the number of concurrent queries allowed by the server.",
                    "type": "integer"
                  },
                  "iqnumbercpus": {
                    "description": "Number of cpus available for IQ server.",
                    "type": "integer"
                  }
                }
              }
            }
          },
          "storageIoMeterAsEgress": {
            "description": "Flag that indicates if this datalake should meter storage as network egress",
            "type": "boolean"
          },
          "allowlistIPs": {
            "description": "IP address or range for allowlisting",
            "items": {
              "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\/(30|31|32|[1-2][0-9]|[0-9]))?$",
              "type": "string"
            },
            "type": "array"
          },
          "enableBackups": {
            "description": "If it is true, it describes automatic backups are enabled in the system.",
            "type": "boolean"
          },
          "fullBackupSchedule": {
            "description": "Cronjob schedule string used to control the frequency of dbautobackup-full cronjob that will be responsible to take the full backup.",
            "type": "string"
          },
          "incBackupSchedule": {
            "description": "Cronjob schedule string used to control the frequency of dbautobackup-inc cronjob that will be responsible to take the incremental backup.",
            "type": "string"
          },
          "isfBackupSchedule": {
            "description": "Cronjob schedule string used to control the frequency of dbautobackup-isf cronjob that will be responsible to take the incremental since full backup.",
            "type": "string"
          },
          "backupRetentionPeriodMinutes": {
            "description": "Age of a backup to consider it as an expired one.",
            "type": "integer"
          },
          "minBackupRetains": {
            "description": "Minimum number of backups to retain regardless of retention period.",
            "type": "integer"
          },
          "retentionCheckSchedule": {
            "description": "Cronjob schedule string used to control the frequency of dbbackupretention cronjob that check and trigger delete operation for the expiry of backups stored on object store.",
            "type": "string"
          },
          "iqEnabled": {
            "description": "Controls whether or not an iq mpx cluster is provisioned with the datalake",
            "type": "boolean"
          },
          "fileContainer": {
            "type": "object",
            "properties": {
              "spec": {
                "properties": {
                  "capabilities": {
                    "properties": {
                      "homeDirectories": {
                        "properties": {
                          "prefix": {
                            "pattern": "^/[\\S]+/$",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "allowedNetworks": {
                    "items": {
                      "pattern": "^((25[0-5]|(2[0-4]|1[0-9]|[1-9]|)[0-9])[.]){3}((25[0-5]|(2[0-4]|1[0-9]|[1-9]|)[0-9])){1}/(3[0-2]|(2|1){0,1}[0-9])$",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "trusts": {
                    "items": {
                      "properties": {
                        "alias": {
                          "pattern": "^[a-z0-9]{1}[a-z0-9-]{0,14}[a-z0-9]{1}$",
                          "type": "string"
                        },
                        "certData": {
                          "pattern": "^-----BEGIN CERTIFICATE-----\\s[A-Za-z0-9+/\\s]+={0,2}\\s-----END CERTIFICATE-----$",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "authorizations": {
                    "items": {
                      "properties": {
                        "pattern": {
                          "type": "string"
                        },
                        "roles": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "rank": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "roles": {
                    "items": {
                      "properties": {
                        "name": {
                          "pattern": "^[a-z0-9]{1}[a-z0-9-]{0,14}[a-z0-9]{1}$",
                          "type": "string"
                        },
                        "privileges": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "dataEncryption": {
            "description": "Describes the mode for the customer managed key system",
            "properties": {
                "keyID": {
                    "description": "key id of customer",
                    "type": "string"
                },
                "mode": {
                    "description": "mode of KMS",
                    "enum": [
                        "DEDICATED_KEY",
                        "MANAGED_KEY"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "mode"
            ],
            "type": "object"
          },
          "backup": {
            "description": "Describes the properties for the backup services",
            "properties":{
              "retentionDays" : {
                "description" : "Retention period for backups in days",
                "format": "int32",
                "maximum": 215,
                "minimum": 0,
                "type" : "integer"
              }
            },
            "type": "object"
          }
        }
      },
      "DatalakeBnrStatus": {
        "type": "object",
        "description": "BackupRestoreStatus defines the observed state of the BackupRestore",
        "properties": {
          "backupServiceEnabled": {
            "description": "Status representing whether backups are enabled or not",
            "properties": {
              "description": {
                "description": "A human readable message indicating details about the backupsServiceEnabled status.",
                "type": "string"
              },
              "state": {
                "description": "Status of the last operation, one of True or False",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "conditions": {
            "description": "Current state of cronjobs of BackupRestore",
            "items": {
              "description": "BackupRestoreCronJobState represents a CronJob State for the BackupRestore resource",
              "properties": {
                "lastProbeTime": {
                  "description": "Time the cronjob was last checked",
                  "format": "date-time",
                  "type": "string"
                },
                "lastScheduleJob": {
                  "description": "State of last triggered job",
                  "properties": {
                    "message": {
                      "description": "Message describing the details status of last job scheduled",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the last job scheduled",
                      "type": "string"
                    },
                    "phase": {
                      "description": "Phase of the last job scheduled",
                      "type": "string"
                    },
                    "startTime": {
                      "description": "Time the last schedule of cronjob",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the last job scheduled",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "lastTransitionTime": {
                  "description": "Time the cronjob transitioned into the current state",
                  "format": "date-time",
                  "type": "string"
                },
                "message": {
                  "description": "Message describing the reason of the state",
                  "type": "string"
                },
                "reason": {
                  "description": "One word Reason why the cronjob has the specific state",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the cronjob",
                  "type": "string"
                },
                "type": {
                  "description": "The type of the cronjob being reported",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "lastOperation": {
            "description": "Represents the detail of the last performed operation",
            "properties": {
              "description": {
                "description": "A human readable message indicating details about the last operation.",
                "type": "string"
              },
              "lastUpdateTime": {
                "description": "Last time the operation state transitioned from one to another.",
                "format": "date-time",
                "type": "string"
              },
              "state": {
                "description": "Status of the last operation, one of Processing, Succeeded, Error",
                "type": "string"
              },
              "type": {
                "description": "Type of the last operation, one of Reconcile",
                "type": "string"
              }
            },
            "type": "object"
          },
          "observedGeneration": {
            "description": "most recent generation observed by the iq-backup-restore-operator reconcile",
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "DatalakeMpxStatus": {
        "type": "object",
        "description": "MpxClusterStatus defines the observed state of the MpxCluster",
        "properties": {
          "conditions": {
            "type": "array",
            "description": "Current state of the MpxCluster",
            "items": {
              "$ref": "#/components/schemas/ServiceStatusCondition"
            }
          },
          "coordReadyReplicas": {
            "description": "Current number of coordiantor pods in ready state",
            "format": "int32",
            "type": "integer"
          },
          "endpoints": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "available endpoints for the MpxCluster",
            "type": "object"
          },
          "lastOperation": {
            "description": "Represents the detail of the last performed operation",
            "properties": {
              "description": {
                "description": "A human readable message indicating details about the last operation.",
                "type": "string"
              },
              "lastUpdateTime": {
                "description": "Last time the operation state transitioned from one to another.",
                "format": "date-time",
                "type": "string"
              },
              "state": {
                "description": "Status of the last operation, one of Processing, Succeeded, Error",
                "type": "string"
              },
              "type": {
                "description": "Type of the last operation, one of Reconcile",
                "type": "string"
              }
            }
          }
        }
      },
      "HanaServiceResource": {
        "type": "object",
        "description": "Transformed content of the HanaService custom resource.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/ServiceMetadata"
          },
          "spec": {
            "$ref": "#/components/schemas/HanaServiceSpec"
          },
          "status": {
            "type": "object",
            "properties": {
              "conditions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceStatusCondition"
                }
              },
              "endpoints": {
                "type": "object",
                "properties": {
                  "sql": {
                    "type": "string"
                  }
                }
              },
              "hanaServiceResourceVersion": {
                "type": "string"
              },
              "hanaServiceStatus": {
                "$ref": "#/components/schemas/HanaServiceStatus"
              },
              "observedGeneration": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "HanaServiceSpec": {
        "type": "object",
        "description": "Specification of the desired state of the HanaService.",
        "properties": {
          "ServiceResizing": {
            "description": "Describes if the system is currently resizing and should be started after being fully stopped",
            "type": "boolean"
          },
          "ServiceUpgrading": {
            "description": "Describes if the system is currently upgrading and should be started after being fully stopped",
            "type": "boolean"
          },
          "additionalWorkers": {
            "description": "The number of additional workers for a scale out system",
            "format": "int32",
            "type": "integer"
          },
          "availabilityZonePlacement": {
            "description": "AvailabilityZonePlacement defines the availability zone within a region for primary and secondary hana nodes",
            "properties": {
              "customerPrimaryAvailabilityZone": {
                "description": "Availability zone for the primary node of hana",
                "type": "string"
              },
              "customerSecondaryAvailabilityZone": {
                "description": "Availability zone for the dr nodes of hana",
                "type": "string"
              },
              "filterLabel": {
                "description": "Label name to be filtered by. Eventually, it can be consumed as the \"key\" to apply the filter to by consumers using node affinity.",
                "type": "string"
              },
              "primaryAvailabilityZone": {
                "description": "Availability zone for the primary node of hana",
                "type": "string"
              },
              "secondaryAvailabilityZone": {
                "description": "Availability zone for the dr nodes of hana",
                "type": "string"
              }
            },
            "type": "object"
          },
          "dataEncryption": {
            "default": {
                "mode": "DEDICATED_KEY"
            },
            "description": "Describes the mode for the customer managed key system",
            "properties": {
                "keyID": {
                    "description": "key id of customer",
                    "type": "string"
                },
                "mode": {
                    "default": "DEDICATED_KEY",
                    "description": "mode of KMS",
                    "enum": [
                        "DEDICATED_KEY",
                        "MANAGED_KEY"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "mode"
            ],
            "type": "object"
          },
          "disasterRecoveryMode": {
            "description": "Disaster Recovery Mode for the HANA instance",
            "type": "string"
          },
          "edition": {
            "description": "Image edition (cloud vs. orange)",
            "type": "string"
          },
          "enabledservices": {
            "description": "Spec of enabled services",
            "properties": {
              "docstore": {
                "description": "Enables the Docstore",
                "type": "boolean"
              },
              "dpserver": {
                "description": "Enables the DPServer",
                "type": "boolean"
              },
              "scriptserver": {
                "description": "Enables the ScriptServer",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "extensionservices": {
            "description": "List of enabled extension services",
            "items": {
              "description": "ExtensionServices add supportive features to a HANA instance. Lifecycle of ExtensionService objects are tied to a HanaService object, but may be controlled by a separate controller.",
              "properties": {
                "enabled": {
                  "description": "Is it enabled? HanaService brokers shall set it to True by default.",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name of ExtensionService",
                  "type": "string"
                },
                "allowlistIPs": {
                  "description": "IPs allowlisted for ExtensionService ingress, if applicable",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "memory": {
            "description": "HANA memory size (RAM) in Gigabyte",
            "format": "int64",
            "type": "integer"
          },
          "preferredAvailabilityZone": {
            "description": "Describe the preferred availability zone of of the hanaservice",
            "properties": {
              "filterLabel": {
                "description": "Label name to be filtered by. Eventually, it can be consumed as the \"key\" to apply the filter to by consumers using node affinity.",
                "type": "string"
              },
              "zone": {
                "description": "Name of the preferred availability zone. Eventually, it can be consumed as the \"value\" to be filtered by by consumers using node affinity.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "productVersion": {
            "description": "Describes the available version of hana",
            "properties": {
              "id": {
                "description": "The internal identifier of an image",
                "type": "string"
              },
              "releaseCycle": {
                "description": "Reflects a stage in the HANA stages concept",
                "type": "string"
              },
              "track": {
                "description": "The current place in the releaseCycle",
                "type": "string"
              }
            },
            "type": "object"
          },
          "requestedOperation": {
            "description": "Request operation parameters",
            "properties": {
              "arguments": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Arguments of request operation",
                "type": "object"
              },
              "generation": {
                "description": "CR generation that operation is requested",
                "format": "int64",
                "type": "integer"
              },
              "name": {
                "description": "Name of request operation",
                "type": "string"
              }
            },
            "type": "object"
          },
          "serviceStopped": {
            "description": "Describes if the system should be running or stopped",
            "type": "boolean"
          },
          "slaLevel": {
            "description": "High availability level",
            "type": "string"
          },
          "storage": {
            "description": "Size of the Storage",
            "format": "int64",
            "type": "integer"
          },
          "templates": {
            "description": "Templates of extensions",
            "properties": {
              "elasticreadnodes": {
                "items": {
                  "description": "ElasticReadNodeSpec describes spec for ElasticReadNode",
                  "properties": {
                    "memory": {
                      "description": "ERN memory size (RAM) in Gigabyte",
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "description": "ERN Name",
                      "type": "string"
                    },
                    "storage": {
                      "description": "Size of the Storage",
                      "format": "int64",
                      "type": "integer"
                    },
                    "vcpu": {
                      "description": "Number of vCPUs used by ERN",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "plugins": {
                "items": {
                  "description": "PluginSpec for HANA Plugin",
                  "properties": {
                    "name": {
                      "description": "Plugin name",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "updateStrategy": {
            "description": "Update Strategy",
            "type": "string"
          },
          "upgradeDetectIntervalInMinutes": {
            "description": "Describes the upgrade version detect interval, unit: minute",
            "format": "int64",
            "type": "integer"
          },
          "vcpu": {
            "description": "Number of vCPUs used by HANA",
            "format": "int64",
            "type": "integer"
          },
          "versionIndicator": {
            "description": "The version of the service to use",
            "type": "string"
          },
          "allowlistIPs": {
            "description": "IP address or range for allowlisting",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "backup": {
            "description": "Describes the properties for the backup services",
            "properties":{
              "retentionDays" : {
                "description" : "Retention period for backups in days",
                "format": "int32",
                "maximum": 215,
                "minimum": 0,
                "type" : "integer"
              }
            },
            "type": "object"
          }
        }
      },
      "HanaServiceStatus": {
        "type": "object",
        "description": "Most recent observed state of the HanaService.",
        "properties": {
          "DRCapable": {
            "description": "Describes whether the hanaservice can be DR enabled based on hana image version",
            "type": "boolean"
          },
          "SMVRCapable": {
            "description": "Describes whether the hanaservice can be SMVR enabled based on hana image version",
            "type": "boolean"
          },
          "ScaleOutCapable": {
            "description": "Describes whether the hanaservice can be ScaleOut enabled based on hana image version",
            "type": "boolean"
          },
          "ServiceResizing": {
            "description": "Describes if the system is currently resizing and should be started after being fully stopped",
            "type": "boolean"
          },
          "ServiceUpgrading": {
            "description": "Describes if the system is currently upgrading and should be started after being fully stopped",
            "type": "boolean"
          },
          "availabilityZonePlacement": {
            "description": "AvailabilityZonePlacement defines the availability zone within a region for primary and secondary hana nodes",
            "properties": {
              "customerPrimaryAvailabilityZone": {
                "description": "Availability zone for the primary node of hana",
                "type": "string"
              },
              "customerSecondaryAvailabilityZone": {
                "description": "Availability zone for the dr nodes of hana",
                "type": "string"
              },
              "filterLabel": {
                "description": "Label name to be filtered by. Eventually, it can be consumed as the \"key\" to apply the filter to by consumers using node affinity.",
                "type": "string"
              },
              "primaryAvailabilityZone": {
                "description": "Availability zone for the primary node of hana",
                "type": "string"
              },
              "secondaryAvailabilityZone": {
                "description": "Availability zone for the dr nodes of hana",
                "type": "string"
              }
            },
            "type": "object"
          },
          "availableUpgradeVersions": {
            "description": "The available production version for a hana upgrade",
            "items": {
              "properties": {
                "expirationDate": {
                  "description": "Indicates when the version will be removed",
                  "type": "string"
                },
                "id": {
                  "description": "The internal identifier of an image",
                  "type": "string"
                },
                "name": {
                  "description": "The human readable external name of a version",
                  "type": "string"
                },
                "releaseCycle": {
                  "description": "Reflects a stage in the HANA stages concept",
                  "type": "string"
                },
                "track": {
                  "description": "The current place in the releaseCycle",
                  "type": "string"
                },
                "version": {
                  "description": "Version declares hana specific settings",
                  "properties": {
                    "buildId": {
                      "description": "The build id of the hana image",
                      "type": "string"
                    },
                    "imageHost": {
                      "description": "The hana image repository",
                      "type": "string"
                    },
                    "imageName": {
                      "description": "The name of the hana image",
                      "type": "string"
                    },
                    "imageTag": {
                      "description": "The tag of the hana image",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "conditions": {
            "type": "array",
            "description": "The conditions of the HANA as observed in the cluster",
            "items": {
              "$ref": "#/components/schemas/ServiceStatusCondition"
            }
          },
          "cpaasRegistrationID": {
            "description": "RegistrationID returned from the registration with CPaaS",
            "format": "int64",
            "type": "integer"
          },
          "currentProductVersion": {
            "description": "The current available production version for a hana",
            "properties": {
              "expirationDate": {
                "description": "Indicates when the version will be removed",
                "type": "string"
              },
              "id": {
                "description": "The internal identifier of an image",
                "type": "string"
              },
              "name": {
                "description": "The human readable external name of a version",
                "type": "string"
              },
              "releaseCycle": {
                "description": "Reflects a stage in the HANA stages concept",
                "type": "string"
              },
              "track": {
                "description": "The current place in the releaseCycle",
                "type": "string"
              },
              "version": {
                "description": "Version declares hana specific settings",
                "properties": {
                  "buildId": {
                    "description": "The build id of the hana image",
                    "type": "string"
                  },
                  "imageHost": {
                    "description": "The hana image repository",
                    "type": "string"
                  },
                  "imageName": {
                    "description": "The name of the hana image",
                    "type": "string"
                  },
                  "imageTag": {
                    "description": "The tag of the hana image",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "endpoints": {
            "description": "Endpoints under which the instance is exposed",
            "properties": {
              "nodes": {
                "description": "The SQL endpoints of HANA nodes",
                "items": {
                  "description": "HanaServiceNodeEndpoint represents the SQL endpoints of HANA nodes",
                  "properties": {
                    "name": {
                      "description": "The name of the node",
                      "type": "string"
                    },
                    "sql": {
                      "description": "The SQL endpoint of the node",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of the node",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "sql": {
                "description": "The SQL endpoint of the instance",
                "type": "string"
              }
            },
            "type": "object"
          },
          "extensions": {
            "additionalProperties": {
              "items": {
                "description": "HanaExtensionStatus mirrors status conditions of an extension resource important to the HANA resource status",
                "properties": {
                  "conditions": {
                    "type": "array",
                    "description": "Detailed conditions",
                    "items": {
                      "$ref": "#/components/schemas/ServiceStatusCondition"
                    }
                  },
                  "endpoint": {
                    "description": "Endpoint the extension has",
                    "type": "string"
                  },
                  "id": {
                    "description": "Id of the extension",
                    "type": "string"
                  },
                  "state": {
                    "description": "State the extension has - refers to the condition of type ready of the extension resource",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "description": "Conditions of extensions that contribute to the status",
            "type": "object"
          },
          "hdiRegistered": {
            "description": "Indicates if registration to HANA broker was successful",
            "type": "string"
          },
          "lastOperation": {
            "description": "The last operation that was performed on the resource",
            "properties": {
              "description": {
                "description": "Describes the action taken by the last operation",
                "type": "string"
              },
              "lastUpdateTime": {
                "description": "Last time the operation state transitioned from one to another.",
                "format": "date-time",
                "type": "string"
              },
              "state": {
                "description": "Status of the last operation, one of Processing, Succeeded, Error",
                "type": "string"
              },
              "type": {
                "description": "Type of the last operation, one of Provision, Update, Deprovision",
                "type": "string"
              }
            },
            "type": "object"
          },
          "lastStorageResizeTime": {
            "description": "Time of last storage resize",
            "format": "date-time",
            "type": "string"
          },
          "lastVersionProbeTime": {
            "description": "Time when the availableUpgradeVersion was checked",
            "format": "date-time",
            "type": "string"
          },
          "nearZeroDowntimeOperation": {
            "description": "Status information for Near Zero Downtime Operations",
            "properties": {
              "nextAvailability": {
                "description": "Next time a NZDO can be performed",
                "format": "date-time",
                "type": "string"
              }
            }
          },
          "nzduCapable": {
            "description": "Describes whether the hanaservice can be nzdu enabled based on whether cert-manager and hanaservicetopology is enabled/disabled and hana image version",
            "type": "boolean"
          },
          "observedGeneration": {
            "description": "ObservedGeneration is the most recent generation observed for this HanaService. It corresponds to HanaService's generation, which is updated on mutation by the API Server.",
            "format": "int64",
            "type": "integer"
          },
          "plugins": {
            "description": "Conditions of plugins that contribute to the status",
            "items": {
              "description": "Mirrors status conditions of an extension resource important to the HANAService resource status",
              "properties": {
                "conditions": {
                  "type": "array",
                  "description": "Detailed conditions for the HANA plugin",
                  "items": {
                    "$ref": "#/components/schemas/ServiceStatusCondition"
                  }
                },
                "id": {
                  "description": "Id of the extension",
                  "type": "string"
                },
                "state": {
                  "description": "State the extension has - refers to the condition of type ready of the extension resource",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "systemPasswordDeleted": {
            "description": "Whether the password of system user in tenant database has been deleted in secret management system",
            "type": "boolean"
          }
        }
      },
      "SparkInstanceResource": {
        "type": "object",
        "description": "Transformed content of the SparkInstance custom resource.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/ServiceMetadata"
          },
          "spec": {
            "$ref": "#/components/schemas/SparkInstanceSpec"
          },
          "status": {
            "type": "object",
            "properties": {
              "conditions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceStatusConditionAlternate"
                }
              },
              "endpoints": {
                "type": "object",
                "properties": {
                  "public": {
                    "type": "string"
                  }
                }
              },
              "observedGeneration": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "SparkInstanceSpec": {
        "type": "object",
        "description": "Specification of the desired state of the SparkInstance.",
        "properties": {
          "defaultSparkVersion": {
            "description": "",
            "type": "string"
          },
          "egressAllowlist": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ingressAllowlist": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memory": {
            "description": "",
            "type": "integer"
          },
          "serviceStopped": {
            "description": "",
            "type": "boolean"
          }, 
          "storage": {
            "description": "",
            "type": "integer"
          },
          "vcpu": {
            "description": "",
            "type": "integer"
          }
        }
      },
      "SparkHistoryServerResource": {
        "type": "object",
        "description": "Transformed content of the Spark History Server custom resource.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/ServiceMetadata"
          },
          "spec": {
            "$ref": "#/components/schemas/SparkHistoryServerSpec"
          },
          "status": {
            "type": "object",
            "properties": {
              "conditions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceStatusConditionAlternate"
                }
              },
              "endpoints": {
                "type": "object",
                "properties": {
                  "historyServer": {
                    "type": "string"
                  }
                }
              },
              "observedGeneration": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "SparkHistoryServerSpec": {
        "type": "object",
        "description": "Specification of the desired state of the HistoryServer.",
        "properties": {
          "logStore": {
            "description": "",
            "type": "string"
          },
          "serviceStopped": {
            "description": "",
            "type": "boolean"
          },
          "sparkVersion": {
            "description": "",
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "required": [
              "code",
              "message"
            ]
          }
        }
      }
    },
    "parameters": {
      "ServicePlanName": {
        "name": "servicePlanName",
        "in": "path",
        "description": "Service Plan Name",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "hana"
      },
      "HcContext": {
        "name": "hcContext",
        "in": "query",
        "description": "Service Instance Context",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "cf.hc.sap.com/organization_guid=orgid,cf.hc.sap.com/space_guid=spaceid,btp.sap.com/runtimeAccountID=raid,btp.sap.com/runtimeGroupID=rgid,k=v"
      },
      "ProductVersion": {
        "name": "productVersion",
        "in": "query",
        "description": "HANA Instance Version Context",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "id=2022.30.5,releaseCycle=generally-available-quarterly,track=2022.30"
      },
      "ServiceInstanceID": {
        "name": "serviceInstanceID",
        "in": "path",
        "description": "Service Instance ID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "operationID": {
        "name": "operationID",
        "in": "path",
        "description": "operation ID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "IfNoneMatch": {
        "name": "If-None-Match",
        "in": "header",
        "description": "Check for unchanged resources.",
        "schema": {
          "type": "string"
        }
      },
      "IfMatch": {
        "name": "If-Match",
        "in": "header",
        "description": "Avoid mid air collisions.",
        "schema": {
          "type": "string"
        }
      },
      "Count": {
        "name": "$count",
        "in": "query",
        "description": "Set if number of elements should be included in the response.",
        "schema": {
          "type": "boolean",
          "default": true
        }
      },
      "Filter": {
        "name": "$filter",
        "in": "query",
        "description": "For filtering the ServiceInstances list based on instanceType. More details can found in [Filtering based on instanceType](https://github.wdf.sap.corp/pages/DBaaS/Docs/designs/phoenix/ri-version-upgrade/#filtering-based-on-instancetype). Currently we only support 'eq' operator. The FilterExpression is case-insensitive",
        "example": "instanceType eq hanaservices",
        "schema": {
          "type": "string"
        }
      },
      "PluginFilter": {
        "name": "$filter",
        "in": "query",
        "description": "For filtering the HANA Plugin list based on pluginGroup. we support 'in' operator. The FilterExpression is case-insensitive",
        "example": "productPlugins in ['sapibpafl', 'testodbcdriver-1.0']",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "ResourceNotModified": {
        "description": "Resource was not modified.",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Identifier for a specific version of a resource."
          }
        }
      },
      "BadRequestGeneric": {
        "description": "400 - Malformed syntax or bad query.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "example": {
                "$ref": "#/components/examples/BadRequestGenericErrorResponse"
              }
            }
          }
        }
      },
      "BadRequestCreateInstance": {
        "description": "400 - Malformed syntax or bad query.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Duplicate instance name": {
                "$ref": "#/components/examples/BadRequestDuplicateInstanceNameErrorResponse"
              },
              "Incorrect PlanId": {
                "$ref": "#/components/examples/BadRequestIncorrectPlanIdErrorResponse"
              },
              "Parameters Field Missing": {
                "$ref": "#/components/examples/BadRequestParametersMissingErrorResponse"
              },
              "Invalid parameter memory": {
                "$ref": "#/components/examples/BadRequestInvalidParameterForCreateInstanceErrorResponse"
              },
              "Incorrect Body": {
                "$ref": "#/components/examples/BadRequestIncorrectBodyErrorResponse"
              }
            }
          }
        }
      },
      "BadRequestUpdateInstance": {
        "description": "400 - Malformed syntax or bad query.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Service Plan Change": {
                "$ref": "#/components/examples/BadRequestServicePlanChangeForUpdateInstanceErrorResponse"
              },
              "Parameters Field Missing": {
                "$ref": "#/components/examples/BadRequestParametersMissingErrorResponse"
              },
              "Incorrect Body": {
                "$ref": "#/components/examples/BadRequestIncorrectBodyErrorResponse"
              }
            }
          }
        }
      },
      "BadRequestDeleteInstance": {
        "description": "400 - Malformed syntax or bad query.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "example": {
                "$ref": "#/components/examples/BadRequestDeleteInstanceGeneric"
              }
            }
          }
        }
      },
      "BadRequestIncorrectParameterForGetVersions": {
        "description": "400 - Malformed syntax or bad query.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "example": {
                "$ref": "#/components/examples/BadRequestIncorrectParameterForGetVersionsErrorResponse"
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "401 - Action requires user authentication.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "example": {
                "$ref": "#/components/examples/UnauthorizedErrorResponse"
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "403 - User or client is not authorized to perform the requested operation.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "example": {
                "$ref": "#/components/examples/ForbiddenErrorResponse"
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "404 - Requested resource not found.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "example": {
                "$ref": "#/components/examples/NotFoundErrorResponse"
              }
            }
          }
        }
      },
      "PluginsNotFound": {
        "description": "404 - Not Found.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "example": {
                "$ref": "#/components/examples/PluginsNotFoundResponse"
              }
            }
          }
        }
      },
      "ConflictError": {
        "description": "409 - Operation conflict.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "example": {
                "$ref": "#/components/examples/ConflictSampleResponse"
              }
            }
          }
        }
      },
      "ResourceConflict": {
        "description": "409 - State of the resource does not permit the request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "example": {
                "$ref": "#/components/examples/ResourceConflictErrorResponse"
              }
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "422 - Requested entity is unprocessable.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "example": {
                "$ref": "#/components/examples/UnprocessableEntityErrorResponse"
              }
            }
          }
        }
      },
      "UnprocessableEntityUpdateInstance": {
        "description": "422 - Requested entity is unprocessable.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Invalid value": {
                "$ref": "#/components/examples/UnprocessableEntityInvalidValueErrorResponse"
              },
              "Incorrect value": {
                "$ref": "#/components/examples/UnprocessableEntityIncorrectValueErrorResponse"
              },
              "Operation in progress": {
                "$ref": "#/components/examples/UnprocessableEntityErrorResponse"
              },
              "Incompatible Plugins":{
                "$ref": "#/components/examples/UnprocessableIncompatiblePluginsUpgrade"
              }
            }
          }
        }
      },
      "InvalidPassword": {
        "description": "422 - Invalid Password ",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Invalid value": {
                "$ref": "#/components/examples/InvalidPasswordResponse"
              }
            }
          }
        }
      },
      "OperationNotFound": {
        "description": "503 - Service Unavailable.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "example": {
                "$ref": "#/components/examples/OperationNotFoundResponse"
              }
            }
          }
        }
      },
      "ServerError": {
        "description": "500 - Internal server error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "example": {
                "$ref": "#/components/examples/ServerErrorErrorResponse"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oAuth2ClientCredentials": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://<landscape-subdomain>.authentication.eu12.hana.ondemand.com/oauth/token",
            "scopes": {
              "ServiceOffering.Read": "Grant read-only access for SAP HANA Cloud service offerings",
              "ServiceInstance.Read": "Grant read-only access for SAP HANA Cloud service instances",
              "ServiceInstance.Manage": "Grant manage access for SAP HANA Cloud service instances",
              "ServiceInstance.AdminPassword": "Grant access to reset the Admin Password for SAP HANA Cloud service instances "
            }
          }
        }
      }
    },
    "examples": {
      "ServiceOfferingListResponse": {
        "value": {
          "count": 1,
          "items": [
            {
              "name": "hana-cloud-dev",
              "id": "c25b1036-c936-0f62-069e-ff44cc60901e",
              "dataCenter": "sap_eu-de-2",
              "metadata": {
                "displayName": "SAP HANA Cloud",
                "documentationUrl": "https://help.sap.com/viewer/p/HANA_CLOUD",
                "imageUrl": "url",
                "longDescription": "<p>SAP HANA Cloud allows you to leverage the in-memory data processing capabilities of SAP HANA in the cloud...</p>",
                "providerDisplayName": "SAP SE",
                "sap": {
                  "HANACloud": {
                    "hyperscaler": "aws",
                    "landscape": "hc-dev-d-orc",
                    "region": "eu-central-1"
                  },
                  "cockpitUrl": "https://hc-val-hana-cockpit.cfapps.sap.hana.ondemand.com",
                  "hasFreeTier": false,
                  "instanceIsolation": false,
                  "omitTdPlans": false,
                  "tenantAware": false
                },
                "supportUrl": "https://help.sap.com/viewer/db19c7071e5f4101837e23f06e576495/cloud/en-US/4f8dabb4d8214d5d93b98dd5f2ad76c9.html"
              },
              "plans": [
                {
                  "name": "hana",
                  "id": "8e7652c7-efae-0f08-0a96-83b19691b309",
                  "metadata": {
                    "UI": {
                      "availabilityZones": [
                        {
                          "maxMemory": 3600,
                          "zone": "eu-central-1a"
                        }
                      ],
                      "configurations": [
                        {
                          "compute": 2,
                          "memory": 30,
                          "storage": 120
                        }
                      ],
                      "instanceSizes": [
                        {
                          "max_cpu": 60,
                          "max_memory": 900,
                          "min_cpu": 2,
                          "min_memory": 30,
                          "scale_out": 15,
                          "step_size_cpu": 1,
                          "step_size_memory": 15
                        }
                      ],
                      "maxBlocks": 240,
                      "maxStoragePerMemoryBlock": 120,
                      "memoryBlockSize": 15,
                      "minBlocks": 2,
                      "minStoragePerMemoryBlock": 40
                    },
                    "bullets": [
                      "An in-memory database supporting federation and replication."
                    ],
                    "sap": {
                      "HANACloud": {
                        "crdName": "hanaservices.hana.sap.com"
                      },
                      "dashboardUrl": "url",
                      "default_releaseCycle": "quarterly",
                      "display_name": "SAP HANA Cloud",
                      "instance_isolation": false,
                      "tenant_aware": false
                    },
                    "supportedMinOSBVersion": "2.13",
                    "supportedPlatforms": [
                      "cloudfoundry"
                    ]
                  },
                  "schemas": {
                    "serviceInstance": {
                      "create": {
                        "parameters": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "additionalProperties": false,
                          "definitions": {
                            "extensionservice": {
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                },
                                "name": {
                                  "pattern": "^(ConnectivityProxy)$",
                                  "type": "string"
                                },
                                "whitelistIPs": {
                                  "ref": "#/definitions/whitelistIPs"
                                }
                              },
                              "required": [
                                "name",
                                "enabled"
                              ],
                              "type": "object"
                            },
                            "whitelistIPs": {
                              "items": {
                                "pattern": "regex",
                                "type": "string"
                              },
                              "maxItems": 45,
                              "type": "array"
                            }
                          },
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "additionalWorkers": {
                                  "description": "Number of additional workers for scale out systems",
                                  "format": "int64",
                                  "maximum": 15,
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "availabilityZonePlacement": {
                                  "additionalProperties": false,
                                  "description": "Settings that enable the customer to ensure spatial proximity between their applications and the HANA instance",
                                  "properties": {
                                    "primaryAvailabilityZone": {
                                      "description": "This zone will be used by the primary instance",
                                      "type": "string"
                                    },
                                    "secondaryAvailabilityZone": {
                                      "description": "This zone will be used by the secondary instance, if defined in .disasterRecoveryMode",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "disasterRecoveryMode": {
                                  "description": "Disaster Recovery of the HANA instance",
                                  "enum": [
                                    "no_disaster_recovery",
                                    "one_secondary_async"
                                  ],
                                  "type": "string"
                                },
                                "edition": {
                                  "description": "Image edition (cloud vs. orange)",
                                  "enum": [
                                    "cloud",
                                    "orange"
                                  ],
                                  "type": "string"
                                },
                                "enabledservices": {
                                  "additionalProperties": false,
                                  "description": "List of services of the HANA to be enabled",
                                  "properties": {
                                    "docstore": {
                                      "default": false,
                                      "type": "boolean"
                                    },
                                    "scriptserver": {
                                      "default": false,
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "extensionservices": {
                                  "description": "List of extension services offering additional features to HANA Cloud",
                                  "items": {
                                    "ref": "#/definitions/extensionservice"
                                  }
                                },
                                "memory": {
                                  "description": "HANA memory size (RAM) in GB",
                                  "format": "int64",
                                  "maximum": 90,
                                  "minimum": 30,
                                  "type": "integer"
                                },
                                "memoryScaleOut": {
                                  "description": "HANA memory size (RAM) in GB for scale out systems",
                                  "format": "int64",
                                  "maximum": 1024,
                                  "minimum": 30,
                                  "type": "integer"
                                },
                                "serviceStopped": {
                                  "description": "Describes if the system should be running or stopped",
                                  "type": "boolean"
                                },
                                "slaLevel": {
                                  "description": "Availability of the HANA instance",
                                  "enum": [
                                    "standard",
                                    "elevated"
                                  ],
                                  "type": "string"
                                },
                                "storage": {
                                  "description": "Size of the Storage in GB",
                                  "format": "int64",
                                  "maximum": 16384,
                                  "minimum": 120,
                                  "type": "integer"
                                },
                                "systempassword": {
                                  "description": "Password to be set for tenant",
                                  "minLength": 8,
                                  "type": "string"
                                },
                                "update_strategy": {
                                  "description": "preferred behaviour for version upgrades. with_restart: the database will be shut down and started again during the upgrade; without_restart: at some point active write transactions will be cancelled, after that the upgrade is effective without further downtime",
                                  "enum": [
                                    "with_restart",
                                    "without_restart"
                                  ]
                                },
                                "vcpu": {
                                  "description": "Number of vCPUs used by HANA",
                                  "minimum": 2,
                                  "type": "integer"
                                },
                                "versionIndicator": {
                                  "description": "The version of the service to use",
                                  "type": "string"
                                },
                                "whitelistIPs": {
                                  "ref": "#/definitions/whitelistIPs",
                                  "description": "IP address or range for allow listing"
                                }
                              },
                              "required": [
                                "edition",
                                "memory",
                                "systempassword"
                              ],
                              "type": "object"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "properties": {},
                              "propertyNames": {
                                "pattern": "^(hc.sap.com/webide_subscription|ui.hc.sap.com/[a-zA-Z0-9_]*)$"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "data"
                          ],
                          "type": "object"
                        }
                      },
                      "update": {
                        "parameters": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "additionalProperties": false,
                          "definitions": {
                            "extensionservice": {
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                },
                                "name": {
                                  "pattern": "^(ConnectivityProxy)$",
                                  "type": "string"
                                },
                                "whitelistIPs": {
                                  "ref": "#/definitions/whitelistIPs"
                                }
                              },
                              "required": [
                                "name",
                                "enabled"
                              ],
                              "type": "object"
                            },
                            "whitelistIPs": {
                              "items": {
                                "pattern": "regex",
                                "type": "string"
                              },
                              "maxItems": 45,
                              "type": "array"
                            }
                          },
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "availabilityZonePlacement": {
                                  "additionalProperties": false,
                                  "description": "Settings that enable the customer to ensure spatial proximity between their applications and the HANA instance",
                                  "properties": {
                                    "primaryAvailabilityZone": {
                                      "description": "This zone will be used by the primary instance",
                                      "type": "string"
                                    },
                                    "secondaryAvailabilityZone": {
                                      "description": "This zone will be used by the secondary instance, if defined in .disasterRecoveryMode",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "disasterRecoveryMode": {
                                  "description": "Disaster Recovery of the HANA instance",
                                  "enum": [
                                    "no_disaster_recovery",
                                    "one_secondary_async"
                                  ],
                                  "type": "string"
                                },
                                "enabledservices": {
                                  "additionalProperties": false,
                                  "description": "List of services of the HANA to be enabled",
                                  "properties": {
                                    "docstore": {
                                      "default": false,
                                      "type": "boolean"
                                    },
                                    "scriptserver": {
                                      "default": false,
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "extensionservices": {
                                  "description": "List of extension services offering additional features to HANA Cloud",
                                  "items": {
                                    "ref": "#/definitions/extensionservice"
                                  }
                                },
                                "memory": {
                                  "description": "HANA memory size (RAM) in GB",
                                  "format": "int64",
                                  "maximum": 90,
                                  "minimum": 30,
                                  "type": "integer"
                                },
                                "requestedOperation": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "arguments": {
                                      "additionalProperties": false,
                                      "description": "List of operation arguments",
                                      "properties": {
                                        "customer_secondary_az": {
                                          "type": "string"
                                        },
                                        "customer_target_az": {
                                          "type": "string"
                                        },
                                        "dummyForFeatureFlags": {},
                                        "secondary_az": {
                                          "type": "string"
                                        },
                                        "target_az": {
                                          "type": "string"
                                        },
                                        "target_timestamp": {
                                          "type": "string"
                                        },
                                        "template_name": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "name": {
                                      "description": "Update operation",
                                      "enum": [
                                        "none",
                                        "POINT_IN_TIME_RECOVERY",
                                        "DISASTER_KEEP_AZ_RECOVERY",
                                        "disaster_recovery_takeover",
                                        "TEMPLATE_BACKUP"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "serviceStopped": {
                                  "description": "Describes if the system should be running or stopped",
                                  "type": "boolean"
                                },
                                "slaLevel": {
                                  "description": "Availability of the HANA instance",
                                  "enum": [
                                    "standard",
                                    "elevated"
                                  ],
                                  "type": "string"
                                },
                                "storage": {
                                  "description": "Size of the Storage in GB",
                                  "format": "int64",
                                  "maximum": 16384,
                                  "minimum": 120,
                                  "type": "integer"
                                },
                                "update_strategy": {
                                  "description": "preferred behaviour for version upgrades. with_restart: the database will be shut down and started again during the upgrade; without_restart: at some point active write transactions will be cancelled, after that the upgrade is effective without further downtime",
                                  "enum": [
                                    "with_restart",
                                    "without_restart"
                                  ]
                                },
                                "vcpu": {
                                  "description": "Number of vCPUs used by HANA",
                                  "minimum": 2,
                                  "type": "integer"
                                },
                                "versionIndicator": {
                                  "description": "The version of the service to use.",
                                  "type": "string"
                                },
                                "whitelistIPs": {
                                  "ref": "#/definitions/whitelistIPs",
                                  "description": "IP address or range for allow listing"
                                }
                              },
                              "type": "object"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "properties": {},
                              "propertyNames": {
                                "pattern": "^(hc.sap.com/webide_subscription|ui.hc.sap.com/[a-zA-Z0-9_]*)$"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "data"
                          ],
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                {
                  "name": "relational-data-lake",
                  "id": "c24d94ec-d24c-48f0-b902-790b4a67724b",
                  "metadata": {
                      "UI": {
                          "cloud_dbspace_enabled": true,
                          "computeStep": 2,
                          "cores-mapping": [
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 0,
                                          "type": ""
                                      },
                                      "workers": {
                                          "count": 0,
                                          "type": ""
                                      }
                                  },
                                  "cores": 0
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 1,
                                          "type": "2"
                                      }
                                  },
                                  "cores": 4
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 2,
                                          "type": "2"
                                      }
                                  },
                                  "cores": 6
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 3,
                                          "type": "2"
                                      }
                                  },
                                  "cores": 8
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 1,
                                          "type": "8"
                                      }
                                  },
                                  "cores": 10
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 1,
                                          "type": "16"
                                      }
                                  },
                                  "cores": 18
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 2,
                                          "type": "16"
                                      }
                                  },
                                  "cores": 34
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 3,
                                          "type": "16"
                                      }
                                  },
                                  "cores": 50
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 4,
                                          "type": "16"
                                      }
                                  },
                                  "cores": 66
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 5,
                                          "type": "16"
                                      }
                                  },
                                  "cores": 82
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 6,
                                          "type": "16"
                                      }
                                  },
                                  "cores": 98
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 7,
                                          "type": "16"
                                      }
                                  },
                                  "cores": 114
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 8,
                                          "type": "16"
                                      }
                                  },
                                  "cores": 130
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 9,
                                          "type": "16"
                                      }
                                  },
                                  "cores": 146
                              },
                              {
                                  "compute": {
                                      "coordinators": {
                                          "count": 1,
                                          "type": "2"
                                      },
                                      "workers": {
                                          "count": 10,
                                          "type": "16"
                                      }
                                  },
                                  "cores": 162
                              }
                          ],
                          "defaultProvisionedSizeGiB": 1024,
                          "default_storage_service_provider": "efs",
                          "default_worker_instance_type": "small",
                          "storageStep": 1,
                          "storage_service_tiers": {
                              "efs": [],
                              "sap": []
                          }
                      },
                      "bullets": [
                          "A disk-based relational database supporting low-cost storage for multi-TB datasets"
                      ],
                      "sap": {
                          "HANACloud": {
                              "crdName": "datalakes.hc.sap.com"
                          },
                          "dashboardUrl": "%s/start?host=%s.iq.&component=dbx&port=443",
                          "display_name": "SAP HANA Cloud Data Lake"
                      },
                      "supportedMinOSBVersion": "2.13",
                      "supportedPlatforms": [
                          "sapcp",
                          "cloudfoundry"
                      ]
                  },
                  "schemas": {
                      "serviceInstance": {
                          "create": {
                              "parameters": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "additionalProperties": false,
                                  "properties": {
                                      "data": {
                                          "additionalProperties": false,
                                          "defaultProperties": [
                                              "systempassword"
                                          ],
                                          "properties": {
                                              "backup": {
                                                  "additionalProperties": false,
                                                  "description": "Backup service properties",
                                                  "properties": {
                                                      "retentionDays": {
                                                          "description": "Specifies the retention period for a backup in days",
                                                          "format": "int32",
                                                          "maximum": 215,
                                                          "minimum": 1,
                                                          "type": "integer"
                                                      }
                                                  },
                                                  "type": "object"
                                              },
                                              "coordinator_type": {
                                                  "description": "Node type for IQ co-ordinators.",
                                                  "enum": [
                                                      "small",
                                                      "medium",
                                                      "large",
                                                      "xlarge",
                                                      "2xlarge",
                                                      "3xlarge"
                                                  ]
                                              },
                                              "enableBackups": {
                                                  "description": "Describes if IQ backups are enabled or not",
                                                  "type": "boolean"
                                              },
                                              "fileContainer": {
                                                  "description": "Configuration of the Data Lake's default file container",
                                                  "properties": {
                                                      "authorizations": {
                                                          "items": {
                                                              "properties": {
                                                                  "pattern": {
                                                                      "type": "string"
                                                                  },
                                                                  "rank": {
                                                                      "type": "integer"
                                                                  },
                                                                  "roles": {
                                                                      "items": {
                                                                          "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "pattern",
                                                                  "roles",
                                                                  "rank"
                                                              ],
                                                              "type": "object"
                                                          },
                                                          "type": "array"
                                                      },
                                                      "capabilities": {
                                                          "properties": {
                                                              "homeDirectories": {
                                                                  "properties": {
                                                                      "prefix": {
                                                                          "pattern": "^/[\\S]+/$",
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "prefix"
                                                                  ],
                                                                  "type": [
                                                                      "object",
                                                                      "null"
                                                                  ]
                                                              }
                                                          },
                                                          "type": "object"
                                                      },
                                                      "roles": {
                                                          "items": {
                                                              "properties": {
                                                                  "name": {
                                                                      "pattern": "^[a-z0-9]{1}[a-z0-9-]{0,14}[a-z0-9]{1}$",
                                                                      "type": "string"
                                                                  },
                                                                  "privileges": {
                                                                      "items": {
                                                                          "enum": [
                                                                              "browse",
                                                                              "open",
                                                                              "create",
                                                                              "append",
                                                                              "rename",
                                                                              "delete",
                                                                              "restore",
                                                                              "impersonate",
                                                                              "authorize"
                                                                          ],
                                                                          "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "name",
                                                                  "privileges"
                                                              ],
                                                              "type": "object"
                                                          },
                                                          "type": "array"
                                                      },
                                                      "trusts": {
                                                          "items": {
                                                              "properties": {
                                                                  "alias": {
                                                                      "pattern": "^[a-z0-9]{1}[a-z0-9-]{0,14}[a-z0-9]{1}$",
                                                                      "type": "string"
                                                                  },
                                                                  "certData": {
                                                                      "pattern": "^-----BEGIN CERTIFICATE-----\\s[A-Za-z0-9+/\\s]+={0,2}\\s-----END CERTIFICATE-----$",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "alias",
                                                                  "certData"
                                                              ],
                                                              "type": "object"
                                                          },
                                                          "type": "array"
                                                      }
                                                  },
                                                  "type": "object"
                                              },
                                              "initOptions": {
                                                  "additionalProperties": false,
                                                  "properties": {
                                                      "blankPadding": {
                                                          "description": "blank padding to be set in HDL",
                                                          "enum": [
                                                              "ON",
                                                              "OFF"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "caseSensitivity": {
                                                          "description": "case sensitivity to be set in HDL",
                                                          "enum": [
                                                              "ignore",
                                                              "respect"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "collation": {
                                                          "description": "collation to be set in HDL",
                                                          "enum": [
                                                              "874THAIBIN",
                                                              "932JPN",
                                                              "936ZHO",
                                                              "949KOR",
                                                              "950ZHO_HK",
                                                              "950ZHO_TW",
                                                              "1250LATIN2",
                                                              "1250POL",
                                                              "1251CYR",
                                                              "1252BIN",
                                                              "1252LATIN1",
                                                              "1252LT1ACC",
                                                              "1252NOR",
                                                              "1252SPA",
                                                              "1252SWEFIN",
                                                              "1253ELL",
                                                              "1254TRK",
                                                              "1254TRKALT",
                                                              "1255HEB",
                                                              "1256ARA",
                                                              "1257LIT",
                                                              "CESU8BIN",
                                                              "EUC_CHINA",
                                                              "EUC_JAPAN",
                                                              "EUC_KOREA",
                                                              "EUC_TAIWAN",
                                                              "ISO1LATIN1",
                                                              "ISO9LATIN1",
                                                              "ISO_1",
                                                              "ISO_BINENG",
                                                              "UTF8BIN"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "ncharAccentSensitivity": {
                                                          "description": "AccentSensitivity to be used in nchar UCA collation to be set in HDL",
                                                          "enum": [
                                                              "ignore",
                                                              "respect",
                                                              "French"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "ncharCaseSensitivity": {
                                                          "description": "CaseSensitivity to be used in nchar UCA collation to be set in HDL",
                                                          "enum": [
                                                              "ignore",
                                                              "respect",
                                                              "UpperFirst",
                                                              "LowerFirst"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "ncharCollation": {
                                                          "description": "nchar collation to be set in HDL",
                                                          "enum": [
                                                              "UCA",
                                                              "UTF8BIN"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "ncharLocale": {
                                                          "description": "locale to be used in nchar UCA collation to be set in HDL",
                                                          "enum": [
                                                              "ar_AE",
                                                              "ar_BH",
                                                              "ar_DZ",
                                                              "ar_EG",
                                                              "ar_IN",
                                                              "ar_IQ",
                                                              "ar_JO",
                                                              "ar_KW",
                                                              "ar_LB",
                                                              "ar_LY",
                                                              "ar_MA",
                                                              "ar_OM",
                                                              "ar_QA",
                                                              "ar_SA",
                                                              "ar_SD",
                                                              "ar_SY",
                                                              "ar_TN",
                                                              "ar",
                                                              "ar_YE",
                                                              "be_BY",
                                                              "be",
                                                              "bg_BG",
                                                              "bg",
                                                              "ca_ES",
                                                              "ca",
                                                              "cs_CZ",
                                                              "cs",
                                                              "da_DK",
                                                              "da",
                                                              "de_AT",
                                                              "de_BE",
                                                              "de_CH",
                                                              "de_DE",
                                                              "de_LU",
                                                              "de__PHONEBOOK",
                                                              "de",
                                                              "el_GR",
                                                              "el",
                                                              "en_AU",
                                                              "en_BE",
                                                              "en_BW",
                                                              "en_CA",
                                                              "en_GB",
                                                              "en_HK",
                                                              "en_IE",
                                                              "en_IN",
                                                              "en_MT",
                                                              "en_NZ",
                                                              "en_PH",
                                                              "en_SG",
                                                              "en",
                                                              "en_US_POSIX",
                                                              "en_US",
                                                              "en_VI",
                                                              "en_ZA",
                                                              "en_ZW",
                                                              "eo",
                                                              "es_AR",
                                                              "es_BO",
                                                              "es_CL",
                                                              "es_CO",
                                                              "es_CR",
                                                              "es_DO",
                                                              "es_EC",
                                                              "es_ES",
                                                              "es_GT",
                                                              "es_HN",
                                                              "es_MX",
                                                              "es_NI",
                                                              "es_PA",
                                                              "es_PE",
                                                              "es_PR",
                                                              "es_PY",
                                                              "es_SV",
                                                              "es__TRADITIONAL",
                                                              "es",
                                                              "es_US",
                                                              "es_UY",
                                                              "es_VE",
                                                              "et_EE",
                                                              "et",
                                                              "fa_AF",
                                                              "fa_IR",
                                                              "fa",
                                                              "fi_FI",
                                                              "fi",
                                                              "fo_FO",
                                                              "fo",
                                                              "fr_BE",
                                                              "fr_CA",
                                                              "fr_CH",
                                                              "fr_FR",
                                                              "fr_LU",
                                                              "fr",
                                                              "ga_IE",
                                                              "ga",
                                                              "gu_IN",
                                                              "gu",
                                                              "he_IL",
                                                              "he",
                                                              "hi__DIRECT",
                                                              "hi_IN",
                                                              "hi",
                                                              "hr_HR",
                                                              "hr",
                                                              "hu_HU",
                                                              "hu",
                                                              "id_ID",
                                                              "id",
                                                              "is_IS",
                                                              "is",
                                                              "it_CH",
                                                              "it_IT",
                                                              "it",
                                                              "ja__DIRECT",
                                                              "ja_JP",
                                                              "ja",
                                                              "kk_KZ",
                                                              "kk",
                                                              "kl_GL",
                                                              "kl",
                                                              "kn_IN",
                                                              "kn",
                                                              "ko_KR",
                                                              "ko",
                                                              "lt_LT",
                                                              "lt",
                                                              "lv_LV",
                                                              "lv",
                                                              "mk_MK",
                                                              "mk",
                                                              "ml",
                                                              "mr_IN",
                                                              "mr",
                                                              "ms_BN",
                                                              "ms_MY",
                                                              "ms",
                                                              "mt_MT",
                                                              "mt",
                                                              "nb_NO",
                                                              "nb",
                                                              "nl_BE",
                                                              "nl_NL",
                                                              "nl",
                                                              "nn_NO",
                                                              "nn",
                                                              "om_ET",
                                                              "om_KE",
                                                              "om",
                                                              "or",
                                                              "pa_IN",
                                                              "pa",
                                                              "pl_PL",
                                                              "pl",
                                                              "ps_AF",
                                                              "ps",
                                                              "pt_BR",
                                                              "pt_PT",
                                                              "pt",
                                                              "root",
                                                              "ro_RO",
                                                              "ro",
                                                              "ru_RU",
                                                              "ru",
                                                              "ru_UA",
                                                              "sh_BA",
                                                              "sh",
                                                              "sh_YU",
                                                              "sk_SK",
                                                              "sk",
                                                              "sl_SI",
                                                              "sl",
                                                              "sq_AL",
                                                              "sq",
                                                              "sr_BA",
                                                              "sr_Cyrl_BA",
                                                              "sr_Cyrl",
                                                              "sr_Cyrl_YU",
                                                              "sr",
                                                              "sr_YU",
                                                              "sv_FI",
                                                              "sv__PHONEBOOK",
                                                              "sv_SE",
                                                              "sv",
                                                              "ta_IN",
                                                              "ta",
                                                              "te_IN",
                                                              "te",
                                                              "th_TH",
                                                              "th",
                                                              "tr_TR",
                                                              "tr",
                                                              "uk",
                                                              "uk_UA",
                                                              "vi",
                                                              "vi_VN",
                                                              "zh_CN",
                                                              "zh_Hant",
                                                              "zh_HK",
                                                              "zh_MO",
                                                              "zh__PINYIN",
                                                              "zh_SG",
                                                              "zh_TW_STROKE",
                                                              "zh_TW",
                                                              "zh"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "ncharPunctuationSensitivity": {
                                                          "description": "PunctuationSensitivity to be used in nchar UCA collation to be set in HDL",
                                                          "enum": [
                                                              "ignore",
                                                              "primary",
                                                              "quanternary"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "ncharSortType": {
                                                          "description": "SortType to be used in nchar UCA collation to be set in HDL",
                                                          "enum": [
                                                              "phonebook",
                                                              "traditional",
                                                              "standard",
                                                              "pinyin",
                                                              "stroke",
                                                              "direct",
                                                              "posix",
                                                              "big5han",
                                                              "gb2312han"
                                                          ],
                                                          "type": "string"
                                                      }
                                                  },
                                                  "type": "object"
                                              },
                                              "iqEnabled": {
                                                  "description": "Whether to provision an iq instance for the datalake or not.",
                                                  "type": "boolean"
                                              },
                                              "num_coordinators": {
                                                  "maximum": 1,
                                                  "minimum": 1,
                                                  "type": "integer"
                                              },
                                              "num_readers": {
                                                  "maximum": 0,
                                                  "minimum": 0,
                                                  "type": "integer"
                                              },
                                              "num_writers": {
                                                  "maximum": 10,
                                                  "minimum": 1,
                                                  "type": "integer"
                                              },
                                              "provisioned_size_gib": {
                                                  "description": "Size of IQ persistence in GB",
                                                  "maximum": 92160,
                                                  "minimum": 1024,
                                                  "type": "integer"
                                              },
                                              "reader_type": {
                                                  "description": "Node size for IQ readers.",
                                                  "enum": [
                                                      "small",
                                                      "medium",
                                                      "large",
                                                      "xlarge",
                                                      "2xlarge",
                                                      "3xlarge"
                                                  ]
                                              },
                                              "serviceStopped": {
                                                  "description": "Describes if the system should be running or stopped",
                                                  "type": "boolean"
                                              },
                                              "storage_service_provider": {
                                                  "description": "The storage service provider to use.",
                                                  "type": "string"
                                              },
                                              "storage_service_tier": {
                                                  "description": "The storage service tier to use.",
                                                  "type": "string"
                                              },
                                              "systempassword": {
                                                  "default": "",
                                                  "description": "Password to be set for tenant",
                                                  "minLength": 6,
                                                  "type": "string"
                                              },
                                              "updateStrategy": {
                                                  "description": "Preferred behaviour for iq version upgrade",
                                                  "enum": [
                                                      "withRollingRestart",
                                                      "withRestart"
                                                  ],
                                                  "type": "string"
                                              },
                                              "versionIndicator": {
                                                  "description": "The version of the service to use",
                                                  "type": "string"
                                              },
                                              "whitelistIPs": {
                                                  "items": {
                                                      "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\/(30|31|32|[1-2][0-9]|[0-9]))?$",
                                                      "type": "string"
                                                  },
                                                  "maxItems": 250,
                                                  "type": "array"
                                              },
                                              "writer_type": {
                                                  "description": "Node size for IQ writers.",
                                                  "enum": [
                                                      "small",
                                                      "medium",
                                                      "large",
                                                      "xlarge",
                                                      "2xlarge",
                                                      "3xlarge"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "systempassword"
                                          ],
                                          "type": "object"
                                      },
                                      "metadata": {
                                          "additionalProperties": true,
                                          "properties": {},
                                          "propertyNames": {
                                              "pattern": "^(ui.hc.sap.com/[a-zA-Z0-9_]*)$"
                                          },
                                          "type": "object"
                                      }
                                  },
                                  "required": [
                                      "data"
                                  ],
                                  "type": "object"
                              }
                          },
                          "update": {
                              "parameters": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "additionalProperties": false,
                                  "properties": {
                                      "data": {
                                          "additionalProperties": false,
                                          "default": {},
                                          "defaultProperties": [],
                                          "properties": {
                                              "backup": {
                                                  "additionalProperties": false,
                                                  "description": "Backup service properties",
                                                  "properties": {
                                                      "retentionDays": {
                                                          "description": "Specifies the retention period for a backup in days",
                                                          "format": "int32",
                                                          "maximum": 215,
                                                          "minimum": 1,
                                                          "type": "integer"
                                                      }
                                                  },
                                                  "type": "object"
                                              },
                                              "coordinator_type": {
                                                  "description": "Node type for IQ co-ordinators.",
                                                  "enum": [
                                                      "small",
                                                      "medium",
                                                      "large",
                                                      "xlarge",
                                                      "2xlarge",
                                                      "3xlarge"
                                                  ]
                                              },
                                              "enableBackups": {
                                                  "description": "Describes if IQ backups are enabled or not",
                                                  "type": "boolean"
                                              },
                                              "fileContainer": {
                                                  "description": "Configuration of the Data Lake's default file container",
                                                  "properties": {
                                                      "authorizations": {
                                                          "items": {
                                                              "properties": {
                                                                  "pattern": {
                                                                      "type": "string"
                                                                  },
                                                                  "rank": {
                                                                      "type": "integer"
                                                                  },
                                                                  "roles": {
                                                                      "items": {
                                                                          "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "pattern",
                                                                  "roles",
                                                                  "rank"
                                                              ],
                                                              "type": "object"
                                                          },
                                                          "type": "array"
                                                      },
                                                      "capabilities": {
                                                          "properties": {
                                                              "homeDirectories": {
                                                                  "properties": {
                                                                      "prefix": {
                                                                          "pattern": "^/[\\S]+/$",
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "prefix"
                                                                  ],
                                                                  "type": [
                                                                      "object",
                                                                      "null"
                                                                  ]
                                                              }
                                                          },
                                                          "type": "object"
                                                      },
                                                      "roles": {
                                                          "items": {
                                                              "properties": {
                                                                  "name": {
                                                                      "pattern": "^[a-z0-9]{1}[a-z0-9-]{0,14}[a-z0-9]{1}$",
                                                                      "type": "string"
                                                                  },
                                                                  "privileges": {
                                                                      "items": {
                                                                          "enum": [
                                                                              "browse",
                                                                              "open",
                                                                              "create",
                                                                              "append",
                                                                              "rename",
                                                                              "delete",
                                                                              "restore",
                                                                              "impersonate",
                                                                              "authorize"
                                                                          ],
                                                                          "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "name",
                                                                  "privileges"
                                                              ],
                                                              "type": "object"
                                                          },
                                                          "type": "array"
                                                      },
                                                      "trusts": {
                                                          "items": {
                                                              "properties": {
                                                                  "alias": {
                                                                      "pattern": "^[a-z0-9]{1}[a-z0-9-]{0,14}[a-z0-9]{1}$",
                                                                      "type": "string"
                                                                  },
                                                                  "certData": {
                                                                      "pattern": "^-----BEGIN CERTIFICATE-----\\s[A-Za-z0-9+/\\s]+={0,2}\\s-----END CERTIFICATE-----$",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "alias",
                                                                  "certData"
                                                              ],
                                                              "type": "object"
                                                          },
                                                          "type": "array"
                                                      }
                                                  },
                                                  "type": "object"
                                              },
                                              "initOptions": {
                                                  "additionalProperties": false,
                                                  "properties": {
                                                      "blankPadding": {
                                                          "description": "blank padding to be set in HDL",
                                                          "enum": [
                                                              "ON",
                                                              "OFF"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "caseSensitivity": {
                                                          "description": "case sensitivity to be set in HDL",
                                                          "enum": [
                                                              "ignore",
                                                              "respect"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "collation": {
                                                          "description": "collation to be set in HDL",
                                                          "enum": [
                                                              "874THAIBIN",
                                                              "932JPN",
                                                              "936ZHO",
                                                              "949KOR",
                                                              "950ZHO_HK",
                                                              "950ZHO_TW",
                                                              "1250LATIN2",
                                                              "1250POL",
                                                              "1251CYR",
                                                              "1252BIN",
                                                              "1252LATIN1",
                                                              "1252LT1ACC",
                                                              "1252NOR",
                                                              "1252SPA",
                                                              "1252SWEFIN",
                                                              "1253ELL",
                                                              "1254TRK",
                                                              "1254TRKALT",
                                                              "1255HEB",
                                                              "1256ARA",
                                                              "1257LIT",
                                                              "CESU8BIN",
                                                              "EUC_CHINA",
                                                              "EUC_JAPAN",
                                                              "EUC_KOREA",
                                                              "EUC_TAIWAN",
                                                              "ISO1LATIN1",
                                                              "ISO9LATIN1",
                                                              "ISO_1",
                                                              "ISO_BINENG",
                                                              "UTF8BIN"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "ncharAccentSensitivity": {
                                                          "description": "AccentSensitivity to be used in nchar UCA collation to be set in HDL",
                                                          "enum": [
                                                              "ignore",
                                                              "respect",
                                                              "French"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "ncharCaseSensitivity": {
                                                          "description": "CaseSensitivity to be used in nchar UCA collation to be set in HDL",
                                                          "enum": [
                                                              "ignore",
                                                              "respect",
                                                              "UpperFirst",
                                                              "LowerFirst"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "ncharCollation": {
                                                          "description": "nchar collation to be set in HDL",
                                                          "enum": [
                                                              "UCA",
                                                              "UTF8BIN"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "ncharLocale": {
                                                          "description": "locale to be used in nchar UCA collation to be set in HDL",
                                                          "enum": [
                                                              "ar_AE",
                                                              "ar_BH",
                                                              "ar_DZ",
                                                              "ar_EG",
                                                              "ar_IN",
                                                              "ar_IQ",
                                                              "ar_JO",
                                                              "ar_KW",
                                                              "ar_LB",
                                                              "ar_LY",
                                                              "ar_MA",
                                                              "ar_OM",
                                                              "ar_QA",
                                                              "ar_SA",
                                                              "ar_SD",
                                                              "ar_SY",
                                                              "ar_TN",
                                                              "ar",
                                                              "ar_YE",
                                                              "be_BY",
                                                              "be",
                                                              "bg_BG",
                                                              "bg",
                                                              "ca_ES",
                                                              "ca",
                                                              "cs_CZ",
                                                              "cs",
                                                              "da_DK",
                                                              "da",
                                                              "de_AT",
                                                              "de_BE",
                                                              "de_CH",
                                                              "de_DE",
                                                              "de_LU",
                                                              "de__PHONEBOOK",
                                                              "de",
                                                              "el_GR",
                                                              "el",
                                                              "en_AU",
                                                              "en_BE",
                                                              "en_BW",
                                                              "en_CA",
                                                              "en_GB",
                                                              "en_HK",
                                                              "en_IE",
                                                              "en_IN",
                                                              "en_MT",
                                                              "en_NZ",
                                                              "en_PH",
                                                              "en_SG",
                                                              "en",
                                                              "en_US_POSIX",
                                                              "en_US",
                                                              "en_VI",
                                                              "en_ZA",
                                                              "en_ZW",
                                                              "eo",
                                                              "es_AR",
                                                              "es_BO",
                                                              "es_CL",
                                                              "es_CO",
                                                              "es_CR",
                                                              "es_DO",
                                                              "es_EC",
                                                              "es_ES",
                                                              "es_GT",
                                                              "es_HN",
                                                              "es_MX",
                                                              "es_NI",
                                                              "es_PA",
                                                              "es_PE",
                                                              "es_PR",
                                                              "es_PY",
                                                              "es_SV",
                                                              "es__TRADITIONAL",
                                                              "es",
                                                              "es_US",
                                                              "es_UY",
                                                              "es_VE",
                                                              "et_EE",
                                                              "et",
                                                              "fa_AF",
                                                              "fa_IR",
                                                              "fa",
                                                              "fi_FI",
                                                              "fi",
                                                              "fo_FO",
                                                              "fo",
                                                              "fr_BE",
                                                              "fr_CA",
                                                              "fr_CH",
                                                              "fr_FR",
                                                              "fr_LU",
                                                              "fr",
                                                              "ga_IE",
                                                              "ga",
                                                              "gu_IN",
                                                              "gu",
                                                              "he_IL",
                                                              "he",
                                                              "hi__DIRECT",
                                                              "hi_IN",
                                                              "hi",
                                                              "hr_HR",
                                                              "hr",
                                                              "hu_HU",
                                                              "hu",
                                                              "id_ID",
                                                              "id",
                                                              "is_IS",
                                                              "is",
                                                              "it_CH",
                                                              "it_IT",
                                                              "it",
                                                              "ja__DIRECT",
                                                              "ja_JP",
                                                              "ja",
                                                              "kk_KZ",
                                                              "kk",
                                                              "kl_GL",
                                                              "kl",
                                                              "kn_IN",
                                                              "kn",
                                                              "ko_KR",
                                                              "ko",
                                                              "lt_LT",
                                                              "lt",
                                                              "lv_LV",
                                                              "lv",
                                                              "mk_MK",
                                                              "mk",
                                                              "ml",
                                                              "mr_IN",
                                                              "mr",
                                                              "ms_BN",
                                                              "ms_MY",
                                                              "ms",
                                                              "mt_MT",
                                                              "mt",
                                                              "nb_NO",
                                                              "nb",
                                                              "nl_BE",
                                                              "nl_NL",
                                                              "nl",
                                                              "nn_NO",
                                                              "nn",
                                                              "om_ET",
                                                              "om_KE",
                                                              "om",
                                                              "or",
                                                              "pa_IN",
                                                              "pa",
                                                              "pl_PL",
                                                              "pl",
                                                              "ps_AF",
                                                              "ps",
                                                              "pt_BR",
                                                              "pt_PT",
                                                              "pt",
                                                              "root",
                                                              "ro_RO",
                                                              "ro",
                                                              "ru_RU",
                                                              "ru",
                                                              "ru_UA",
                                                              "sh_BA",
                                                              "sh",
                                                              "sh_YU",
                                                              "sk_SK",
                                                              "sk",
                                                              "sl_SI",
                                                              "sl",
                                                              "sq_AL",
                                                              "sq",
                                                              "sr_BA",
                                                              "sr_Cyrl_BA",
                                                              "sr_Cyrl",
                                                              "sr_Cyrl_YU",
                                                              "sr",
                                                              "sr_YU",
                                                              "sv_FI",
                                                              "sv__PHONEBOOK",
                                                              "sv_SE",
                                                              "sv",
                                                              "ta_IN",
                                                              "ta",
                                                              "te_IN",
                                                              "te",
                                                              "th_TH",
                                                              "th",
                                                              "tr_TR",
                                                              "tr",
                                                              "uk",
                                                              "uk_UA",
                                                              "vi",
                                                              "vi_VN",
                                                              "zh_CN",
                                                              "zh_Hant",
                                                              "zh_HK",
                                                              "zh_MO",
                                                              "zh__PINYIN",
                                                              "zh_SG",
                                                              "zh_TW_STROKE",
                                                              "zh_TW",
                                                              "zh"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "ncharPunctuationSensitivity": {
                                                          "description": "PunctuationSensitivity to be used in nchar UCA collation to be set in HDL",
                                                          "enum": [
                                                              "ignore",
                                                              "primary",
                                                              "quanternary"
                                                          ],
                                                          "type": "string"
                                                      },
                                                      "ncharSortType": {
                                                          "description": "SortType to be used in nchar UCA collation to be set in HDL",
                                                          "enum": [
                                                              "phonebook",
                                                              "traditional",
                                                              "standard",
                                                              "pinyin",
                                                              "stroke",
                                                              "direct",
                                                              "posix",
                                                              "big5han",
                                                              "gb2312han"
                                                          ],
                                                          "type": "string"
                                                      }
                                                  },
                                                  "type": "object"
                                              },
                                              "iqEnabled": {
                                                  "description": "Whether to provision an iq instance for the datalake or not.",
                                                  "type": "boolean"
                                              },
                                              "num_coordinators": {
                                                  "maximum": 1,
                                                  "minimum": 1,
                                                  "type": "integer"
                                              },
                                              "num_readers": {
                                                  "maximum": 0,
                                                  "minimum": 0,
                                                  "type": "integer"
                                              },
                                              "num_writers": {
                                                  "maximum": 10,
                                                  "minimum": 1,
                                                  "type": "integer"
                                              },
                                              "provisioned_size_gib": {
                                                  "description": "Size of IQ persistence in GB.",
                                                  "maximum": 92160,
                                                  "minimum": 1024,
                                                  "type": "integer"
                                              },
                                              "reader_type": {
                                                  "description": "Node size for IQ readers.",
                                                  "enum": [
                                                      "small",
                                                      "medium",
                                                      "large",
                                                      "xlarge",
                                                      "2xlarge",
                                                      "3xlarge"
                                                  ]
                                              },
                                              "requestedOperation": {
                                                  "additionalProperties": false,
                                                  "properties": {
                                                      "arguments": {
                                                          "additionalProperties": false,
                                                          "description": "List of operation arguments",
                                                          "properties": {
                                                              "target_timestamp": {
                                                                  "description": "timestamp to find most recent backups (before timestamp) for recovery in YYYY-MM-DD HH:MM:SS.FFF format",
                                                                  "type": "string"
                                                              },
                                                              "upgrade_type": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "type": "object"
                                                      },
                                                      "name": {
                                                          "description": "Update operation",
                                                          "enum": [
                                                              "none",
                                                              "INFRASTRUCTURE_UPGRADE",
                                                              "RECOVERY",
                                                              "CANCEL_RECOVERY"
                                                          ],
                                                          "type": "string"
                                                      }
                                                  },
                                                  "type": "object"
                                              },
                                              "serviceStopped": {
                                                  "description": "Describes if the system should be running or stopped",
                                                  "type": "boolean"
                                              },
                                              "updateStrategy": {
                                                  "description": "Preferred behaviour for iq version upgrade",
                                                  "enum": [
                                                      "withRollingRestart",
                                                      "withRestart"
                                                  ],
                                                  "type": "string"
                                              },
                                              "versionIndicator": {
                                                  "description": "The version of the service to use.",
                                                  "type": "string"
                                              },
                                              "whitelistIPs": {
                                                  "items": {
                                                      "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\/(30|31|32|[1-2][0-9]|[0-9]))?$",
                                                      "type": "string"
                                                  },
                                                  "maxItems": 250,
                                                  "type": "array"
                                              },
                                              "writer_type": {
                                                  "description": "Node size for IQ writers.",
                                                  "enum": [
                                                      "small",
                                                      "medium",
                                                      "large",
                                                      "xlarge",
                                                      "2xlarge",
                                                      "3xlarge"
                                                  ]
                                              }
                                          },
                                          "type": "object"
                                      },
                                      "metadata": {
                                          "additionalProperties": true,
                                          "properties": {},
                                          "propertyNames": {
                                              "pattern": "^(ui.hc.sap.com/[a-zA-Z0-9_]*)$"
                                          },
                                          "type": "object"
                                      }
                                  },
                                  "required": [
                                      "data"
                                  ],
                                  "type": "object"
                              }
                          }
                      }
                  }
                },
                {
                  "name": "hana-cloud-connection",
                  "id": "b5feba20-11ed-4c52-9bad-5fada7f21b43",
                  "metadata": {
                      "sap": {
                          "HANACloud": {
                              "crdName": "containergroups.hc.sap.com"
                          },
                          "display_name": "SAP HANA Cloud Connection"
                      },
                      "supportedMinOSBVersion": "2.13",
                      "supportedPlatforms": [
                          "sapcp",
                          "cloudfoundry"
                      ]
                  },
                  "schemas": {
                      "serviceInstance": {
                          "create": {
                              "parameters": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "additionalProperties": false,
                                  "properties": {
                                      "data": {
                                          "additionalProperties": false,
                                          "properties": {
                                              "datalakeID": {
                                                  "description": "Service instance GUID of the data-lake instance",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "datalakePassword": {
                                                  "description": "Password in the data lake instance",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "datalakeUser": {
                                                  "description": "User ID in the data lake instance",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "hanaID": {
                                                  "description": "Service instance GUID of the HANA instance",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "hanaPassword": {
                                                  "description": "Password for the HANA user",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "hanaUser": {
                                                  "description": "User ID for HANA (for example, SYSTEM)",
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "datalakeID",
                                              "hanaID"
                                          ],
                                          "type": "object"
                                      }
                                  },
                                  "required": [
                                      "data"
                                  ],
                                  "type": "object"
                              }
                          },
                          "update": {
                              "parameters": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "additionalProperties": false,
                                  "properties": {},
                                  "type": "object"
                              }
                          }
                      }
                  }
                },
                {
                  "name": "apache-spark",
                  "id": "7badf89f-8c75-4d92-bd93-f8c04861e7ef",
                  "metadata": {
                      "UI": {},
                      "bullets": [
                          "tbd"
                      ],
                      "sap": {
                          "HANACloud": {
                              "crdName": "sparkinstances.bds.sap.com"
                          },
                          "display_name": "SAP HANA Cloud, Apache Spark Service",
                          "omit_td_plans": true
                      },
                      "supportedMinOSBVersion": "2.13",
                      "supportedPlatforms": [
                          "sapcp",
                          "cloudfoundry"
                      ]
                  },
                  "schemas": {
                      "serviceInstance": {
                          "create": {
                              "parameters": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "additionalProperties": false,
                                  "properties": {
                                      "data": {
                                          "additionalProperties": false,
                                          "metadata": {
                                              "additionalProperties": true,
                                              "properties": {},
                                              "propertyNames": {
                                                  "pattern": "^([a-zA-Z0-9_]*)$"
                                              },
                                              "type": "object"
                                          },
                                          "properties": {
                                              "credentialStoreBinding": {
                                                  "description": "User-provided service key to user's credential store instance",
                                                  "type": "object"
                                              },
                                              "defaultSparkVersion": {
                                                  "description": "The default version of the service to use",
                                                  "type": "string"
                                              },
                                              "egressAllowlist": {
                                                  "description": "Allowed egress IP address List",
                                                  "items": {
                                                      "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\/(30|31|32|[1-2][0-9]|[0-9]))?$",
                                                      "type": "string"
                                                  },
                                                  "maxItems": 45,
                                                  "type": "array"
                                              },
                                              "ingressAllowlist": {
                                                  "description": "Allowed ingress IP address List",
                                                  "items": {
                                                      "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\/(30|31|32|[1-2][0-9]|[0-9]))?$",
                                                      "type": "string"
                                                  },
                                                  "maxItems": 45,
                                                  "type": "array"
                                              },
                                              "memory": {
                                                  "description": "Spark memory size (RAM) in GB",
                                                  "format": "int64",
                                                  "maximum": 40960,
                                                  "minimum": 256,
                                                  "type": "integer"
                                              },
                                              "serviceStopped": {
                                                  "description": "Describes if the system should be running or stopped",
                                                  "type": "boolean"
                                              },
                                              "storage": {
                                                  "description": "Size of the Storage",
                                                  "format": "int64",
                                                  "maximum": 10240,
                                                  "minimum": 0,
                                                  "type": "integer"
                                              },
                                              "vcpu": {
                                                  "description": "Number of vCPUs used by Spark",
                                                  "format": "int64",
                                                  "maximum": 4096,
                                                  "minimum": 32,
                                                  "type": "integer"
                                              }
                                          },
                                          "required": [
                                              "vcpu",
                                              "memory",
                                              "storage",
                                              "ingressAllowlist",
                                              "egressAllowlist"
                                          ],
                                          "type": "object"
                                      }
                                  },
                                  "required": [
                                      "data"
                                  ],
                                  "type": "object"
                              }
                          },
                          "update": {
                              "parameters": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "additionalProperties": false,
                                  "properties": {
                                      "data": {
                                          "additionalProperties": false,
                                          "properties": {
                                              "credentialStoreBinding": {
                                                  "description": "User-provided service key to user's credential store instance",
                                                  "type": "object"
                                              },
                                              "defaultSparkVersion": {
                                                  "description": "The default version of the service to use",
                                                  "type": "string"
                                              },
                                              "egressAllowlist": {
                                                  "description": "Allowed egress IP address List",
                                                  "items": {
                                                      "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\/(30|31|32|[1-2][0-9]|[0-9]))?$",
                                                      "type": "string"
                                                  },
                                                  "maxItems": 45,
                                                  "type": "array"
                                              },
                                              "ingressAllowlist": {
                                                  "description": "Allowed ingress IP address List",
                                                  "items": {
                                                      "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\/(30|31|32|[1-2][0-9]|[0-9]))?$",
                                                      "type": "string"
                                                  },
                                                  "maxItems": 45,
                                                  "type": "array"
                                              },
                                              "memory": {
                                                  "description": "Spark memory size (RAM) in GB",
                                                  "format": "int64",
                                                  "maximum": 40960,
                                                  "minimum": 256,
                                                  "type": "integer"
                                              },
                                              "serviceStopped": {
                                                  "description": "Describes if the system should be running or stopped",
                                                  "type": "boolean"
                                              },
                                              "storage": {
                                                  "description": "Size of the Storage",
                                                  "format": "int64",
                                                  "maximum": 10240,
                                                  "minimum": 0,
                                                  "type": "integer"
                                              },
                                              "vcpu": {
                                                  "description": "Number of vCPUs used by Spark",
                                                  "format": "int64",
                                                  "maximum": 4096,
                                                  "minimum": 32,
                                                  "type": "integer"
                                              }
                                          },
                                          "type": "object"
                                      },
                                      "metadata": {
                                          "additionalProperties": true,
                                          "properties": {},
                                          "propertyNames": {
                                              "pattern": "^([a-zA-Z0-9_]*)$"
                                          },
                                          "type": "object"
                                      }
                                  },
                                  "required": [
                                      "data"
                                  ],
                                  "type": "object"
                              }
                          }
                      }
                  }
                },
                {
                    "name": "apache-spark-tenant",
                    "id": "dd34a1a0-26fb-496f-8c92-0d5eba104b96",
                    "metadata": {
                        "UI": {},
                        "bullets": [
                            "tbd"
                        ],
                        "sap": {
                            "HANACloud": {
                                "crdName": "sparktenants.bds.sap.com"
                            },
                            "display_name": "SAP HANA Cloud, Apache Spark Tenant",
                            "omit_td_plans": true
                        },
                        "supportedMinOSBVersion": "2.13",
                        "supportedPlatforms": [
                            "sapcp",
                            "cloudfoundry"
                        ]
                    },
                    "schemas": {
                        "serviceInstance": {
                            "create": {
                                "parameters": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "additionalProperties": false,
                                    "properties": {
                                        "data": {
                                            "additionalProperties": false,
                                            "metadata": {
                                                "additionalProperties": true,
                                                "properties": {},
                                                "propertyNames": {
                                                    "pattern": "^([a-zA-Z0-9_]*)$"
                                                },
                                                "type": "object"
                                            },
                                            "properties": {
                                                "parentInstanceID": {
                                                    "description": "Associated Spark service instance Id",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "parentInstanceID"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ],
                                    "type": "object"
                                }
                            },
                            "update": {
                                "parameters": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "additionalProperties": false,
                                    "properties": {
                                        "data": {
                                            "additionalProperties": false,
                                            "properties": {},
                                            "type": "object"
                                        },
                                        "metadata": {
                                            "additionalProperties": true,
                                            "properties": {},
                                            "propertyNames": {
                                                "pattern": "^([a-zA-Z0-9_]*)$"
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                {
                    "name": "apache-spark-history",
                    "id": "dbfbb044-8cc5-4912-a067-f24b59a126f2",
                    "metadata": {
                        "UI": {},
                        "bullets": [
                            "tbd"
                        ],
                        "sap": {
                            "HANACloud": {
                                "crdName": "sparkhistoryservers.bds.sap.com"
                            },
                            "display_name": "SAP HANA Cloud, Apache Spark History Server",
                            "omit_td_plans": true
                        },
                        "supportedMinOSBVersion": "2.13",
                        "supportedPlatforms": [
                            "sapcp",
                            "cloudfoundry"
                        ]
                    },
                    "schemas": {
                        "serviceInstance": {
                            "create": {
                                "parameters": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "additionalProperties": false,
                                    "properties": {
                                        "data": {
                                            "additionalProperties": false,
                                            "metadata": {
                                                "additionalProperties": true,
                                                "properties": {},
                                                "propertyNames": {
                                                    "pattern": "^([a-zA-Z0-9_]*)$"
                                                },
                                                "type": "object"
                                            },
                                            "properties": {
                                                "logStore": {
                                                    "description": "Log store of hdlfs file container URL",
                                                    "type": "string"
                                                },
                                                "parentInstanceID": {
                                                    "description": "Linked Spark instance",
                                                    "type": "string"
                                                },
                                                "serviceStopped": {
                                                    "description": "Describes if the system should be running or stopped",
                                                    "type": "boolean"
                                                },
                                                "sparkVersion": {
                                                    "description": "The runtime version of the service to use",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "parentInstanceID",
                                                "logStore"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ],
                                    "type": "object"
                                }
                            },
                            "update": {
                                "parameters": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "additionalProperties": false,
                                    "properties": {
                                        "data": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "serviceStopped": {
                                                    "description": "Describes if the system should be running or stopped",
                                                    "type": "boolean"
                                                },
                                                "sparkVersion": {
                                                    "description": "The runtime version of the service to use",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "metadata": {
                                            "additionalProperties": true,
                                            "properties": {},
                                            "propertyNames": {
                                                "pattern": "^([a-zA-Z0-9_]*)$"
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
              ]
            },
            {

            }
          ]
        }
      },
      "ProductPluginsResponse": {
        "value": {
          "data":
          [
            {
              "name": "sapudfhcafl",
              "description": "UDF AFL",
              "displayName": "UDF plugin",
              "versions": [
                {
                  "name": "sapudfhcafl-1.4-0-0",
                  "version": "100.4.4",
                  "description": "",
                  "displayName": "value"
                },
                {
                  "name": "sapudfhcafl-1.5-0-0",
                  "version": "100.4.5",
                  "description": "",
                  "displayName": "value"
                }
              ]
            },
            {
              "name": "testsign-odbcdriverforabaphc",
              "description": "1st experimental 1:n odbcdriverforabap plugin",
              "displayName": "odbcdriver plugin",
              "versions": [
                {
                  "name": "testsign-odbcdriverforabaphc-1.0-100.04.4",
                  "version": "1.0.100-beta",
                  "description": "",
                  "displayName": "value"
                },
                {
                  "name": "testsign-odbcdriverforabaphc-1.0-102.05.1",
                  "version": "1.0.102-alpha",
                  "description": "",
                  "displayName": "value"
                }
              ]
            }
          ]
        }
      },
      "ProductVersionListResponse": {
        "value": {
          "data":
          [
            {
              "name": "HANA Cloud Edition 2019.36",
              "releaseCycle": "generally-available-quarterly",
              "track": "2019.36",
              "id": "2019.36.7",
              "expirationDate": "2019-11-30"
            },
            {
              "name": "HANA Cloud Edition 2019.34",
              "releaseCycle": "generally-available-biweekly",
              "track": "2019.34",
              "id": "2019.34.3",
              "expirationDate": "2019-11-30"
            }
          ]
        }
      },
      "ProductVersionUpgradeListResponse": {
        "value": {
          "data":
          [
            {
              "name": "HANA Cloud Edition 2019.36",
              "releaseCycle": "generally-available-quarterly",
              "track": "2019.36",
              "id": "2019.36.7",
              "expirationDate": "2020-11-30",
              "incompatiblePlugins": ["sapibphcafl-1.0-2205-cw-01", "test-odbcdriverforabaphc-1.0-100.03"]
            },
            {
              "name": "HANA Cloud Edition 2019.34",
              "releaseCycle": "generally-available-biweekly",
              "track": "2019.34",
              "id": "2019.34.3",
              "expirationDate": "2020-11-30"
            }
          ]
        }
      },
      "operationSampleResponse": {
        "value": {
          "name": "passwordReset",
          "status": {
              "state": "Running",
              "description": "Password update in progress",
              "startTimestamp": "2022-11-01T04:40:32Z"
          }
        }
      },
      "ServiceInstanceListResponse": {
        "value": {
          "count": 3,
          "items": [
            {
              "resource": {
                "metadata": {
                  "annotations": {
                    "hana-operator.hana.sap.com/hana-v1beta1": "True",
                    "hana.sap.com/tenantAdminVersion": "v1",
                    "hc.sap.com/availableVersionIndicator": "95e75b1f43dc96cf19d1eef0fcb386966c78c818a3f612413c7a44646c01cce3"
                  },
                  "creationTimestamp": "2021-10-06T13:48:54Z",
                  "generation": 2,
                  "labels": {
                    "cf.hc.sap.com/global_account_id": "bfbdc98c-3528-49ef-abe2-637aa130da5c",
                    "cf.hc.sap.com/instance_guid": "4c923c55-166a-422e-8b3f-758c41b95b7e",
                    "cf.hc.sap.com/instance_name": "testme",
                    "cf.hc.sap.com/subaccount_id": "1234asd-fc70-4f4c-9126-123asdasc",
                    "cf.hc.sap.com/subdomain": "hc-dev-services"
                  },
                  "name": "4c923c55-166a-422e-8b3f-758c41b95b7e",
                  "namespace": "hc-broker",
                  "resourceVersion": "67731",
                  "uid": "bc923a20-6634-4a32-b270-bccbc170702d"
                },
                "spec": {
                  "availabilityZonePlacement": {},
                  "dataEncryption": {
                    "mode": "DEDICATED_KEY"
                  },
                  "disasterRecoveryMode": "no_disaster_recovery",
                  "edition": "cloud",
                  "enabledservices": {
                    "docstore": false,
                    "dpserver": true,
                    "scriptserver": false
                  },
                  "memory": 30,
                  "requestedOperation": {},
                  "serviceStopped": false,
                  "slaLevel": "standard",
                  "storage": 120,
                  "templates": {
                    "elasticreadnodes": [],
                    "plugins": []
                  },
                  "updateStrategy": "withRestart",
                  "vcpu": 2,
                  "versionIndicator": "95e75b1f43dc96cf19d1eef0fcb386966c78c818a3f612413c7a44646c01cce3",
                  "allowlistIPs": [
                    "0.0.0.0/0"
                  ],
                  "backup": {
                    "retentionDays": 37
                  }
                },
                "status": {
                  "conditions": [
                    {
                      "lastTransitionTime": "2021-10-06T13:49:43Z",
                      "message": "Not all pods are ready, Backup not ready, Hanabroker not registered",
                      "status": "False",
                      "type": "ObservedGenerationCompleted"
                    }
                  ],
                  "endpoints": {
                    "sql": "4c923c55-166a-422e-8b3f-758c41b95b7e.hana.cluster.dev-aws.hanacloud.ondemand.com:443"
                  },
                  "hanaServiceResourceVersion": "75327",
                  "hanaServiceStatus": {
                    "DRCapable": true,
                    "SMVRCapable": true,
                    "ScaleOutCapable": true,
                    "availabilityZonePlacement": {
                      "primaryAvailabilityZone": "eu-central-1a"
                    },
                    "conditions": [
                      {
                        "lastProbeTime": "1970-01-01T00:00:00Z",
                        "lastTransitionTime": "2021-10-06T13:49:05Z",
                        "message": "Not all pods are ready, Backup not ready, Hanabroker not registered",
                        "status": "False",
                        "type": "Ready"
                      },
                      {
                        "lastProbeTime": "1970-01-01T00:00:00Z",
                        "lastTransitionTime": "2021-10-06T13:49:05Z",
                        "message": "All pods are ready",
                        "status": "False",
                        "type": "ServiceStopped"
                      },
                      {
                        "lastProbeTime": "1970-01-01T00:00:00Z",
                        "lastTransitionTime": "2021-10-06T13:49:05Z",
                        "status": "False",
                        "type": "Upgrade"
                      },
                      {
                        "lastProbeTime": "1970-01-01T00:00:00Z",
                        "lastTransitionTime": "2021-10-06T13:49:05Z",
                        "status": "False",
                        "type": "Resize"
                      }
                    ],
                    "currentProductVersion": {
                      "version": {}
                    },
                    "endpoints": {
                      "sql": "4c923c55-166a-422e-8b3f-758c41b95b7e.hana.cluster.dev-aws.hanacloud.ondemand.com:443"
                    },
                    "hdiRegistered": "False",
                    "lastOperation": {
                      "description": "{\"id\":2,\"message\":\"Not all pods are ready, Backup not ready, Hanabroker not registered\"}",
                      "lastUpdateTime": "2021-10-06T13:49:43Z",
                      "state": "Processing",
                      "type": "Update"
                    },
                    "nzduCapable": true,
                    "observedGeneration": 3
                  },
                  "observedGeneration": 2
                }
              },
              "details": {
                "id": "7d7158e2-b960-4e5a-aab1-012ec3a97fdb",
                "ready": true,
                "lastOperation": {
                  "id": "7ac0c366-da4c-49a4-a5f0-e8a6cb74993a",
                  "ready": true,
                  "type": "create",
                  "state": "succeeded",
                  "resourceId": "7d7158e2-b960-4e5a-aab1-012ec3a97fdb",
                  "resourceType": "/v1/service_instances",
                  "platformId": "85052172-ceea-4b5c-a6b0-d5e924f77fe9",
                  "correlationId": "39fbc412-a2e9-498e-52aa-4a8a506c65d2",
                  "reschedule": false,
                  "rescheduleTimestamp": "0001-01-01T00:00:00Z",
                  "deletionScheduled": "0001-01-01T00:00:00Z",
                  "createdAt": "2021-09-29T14:52:24.349153Z",
                  "updatedAt": "2021-09-30T08:13:24.781889Z"
                },
                "name": "hana1",
                "planId": "da6a72e8-5e6f-4a08-a21f-38922423dfef",
                "platformId": "85052172-ceea-4b5c-a6b0-d5e924f77fe9",
                "dashboarUrl": "https://hana-cockpit.cfapps.eu10.hana.ondemand.com/start?host=7d7158e2-b960-4e5a-aab1-012ec3a97fdb.hana.trial-eu10.hanacloud.ondemand.com&component=cockpit&port=443",
                "context": {
                  "platform": "sapcp",
                  "organizationGuid": "75b1749c-684e-4154-972b-9bfb5e2faa5f",
                  "spaceGuid": "09cd4d1a-f015-4c03-a913-d2b45d30e692",
                  "organizationName": "90cd51f6trial",
                  "spaceName": "dev",
                  "organizationAnnotations": {},
                  "spaceAnnotations": {},
                  "instanceName\"": "hana1",
                  "instanceAnnotations": {},
                  "zoneId": "eaacbdd8-b316-46d5-a6a9-d5f3e88ac800",
                  "globalAccountId": "12345asd-3edf-4bfb-a2ae-549750666cc1",
                  "subdomain": "90cd51f6trial",
                  "region": "cf-eu10",
                  "landscapeLabel": "cf-eu10",
                  "crmCustomerId": "",
                  "origin": "cloudfoundry",
                  "licenseType": "TRIAL",
                  "subaccountId": "eaacbdd8-b316-46d5-a6a9-d5f3e88ac800"
                },
                "usable": true,
                "createdAt": "2021-09-29T14:52:24.349153Z",
                "updatedAt": "2021-09-30T08:13:24.795027Z",
                "labels": {
                  "subaccountId": [
                    "eaacbdd8-b316-46d5-a6a9-d5f3e88ac800"
                  ]
                }
              }
            },
            {
              "resource": {
                "metadata": {
                    "labels": {
                        "cf.hc.sap.com/instance_name": "spark-1",
                        "cf.hc.sap.com/global_account_id": "260aa8c7-7538-4563-9f1a-774c868ed022",
                        "cf.hc.sap.com/subaccount_id": "0f77b9c2-f4aa-4a80-9bdd-4d42d65fa61b"
                    },
                    "name": "fce087a6-330b-454f-92a3-ceb9556bd0d3",
                    "namespace": "hc-broker",
                    "generation": 1
                },
                "spec": {
                    "serviceStopped": false,
                    "defaultSparkVersion": "spark_v1",
                    "memory": 256,
                    "storage": 200,
                    "ingressAllowlist": ["172.30.0.0/16", "1.52.100.0/24"],
                    "egressAllowlist": ["192.168.83.64/2"]
                },
                "status": {
                    "observedGeneration": 1,
                    "endpoints": {
                        "public": "fce087a6-330b-454f-92a3-ceb9556bd0d3.compute.<region>.ondemand.com"
                    },
                    "conditions": [
                      {
                        "lastTransitionTime": "2023-05-03T15:21:22Z",
                        "message": "spec updated",
                        "observedGeneration": 1,
                        "reason": "Ready",
                        "status": true,
                        "type": "ObservedGenerationCompleted"
                      }
                    ]
                }
              },
              "details": {
                  "id": "fce087a6-330b-454f-92a3-ceb9556bd0d3",
                  "ready": false,
                  "name": "spark-1",
                  "servicePlanId": "eac6b3eb-abaf-461a-bc7b-1ee98d3df8e6",
                  "platformId": "service-manager",
                  "context": {
                      "global_account_id": "260aa8c7-7538-4563-9f1a-774c868ed022",
                      "instance_name": "spark-1",
                      "license_type": "SAPDEV",
                      "origin": "sapcp",
                      "platform": "sapcp",
                      "region": "cf-eu12",
                      "subaccount_id": "0f77b9c2-f4aa-4a80-9bdd-4d42d65fa61b",
                      "subdomain": "i538339w-test",
                      "zone_id": "0f77b9c2-f4aa-4a80-9bdd-4d42d65fa61b"
                  },
                  "usable": false,
                  "createdAt": "2023-06-01T21:41:05.400612Z",
                  "updatedAt": "2023-06-01T21:41:05.400612Z",
                  "labels": {
                      "subaccount_id": [
                          "0f77b9c2-f4aa-4a80-9bdd-4d42d65fa61b"
                      ]
                  }
              }
            },
            {
              "resource": {
                  "metadata": {
                      "annotations": {
                          "hana.sap.com/tenantAdminVersion": "v1",
                          "hc.sap.com/context": "{\"global_account_id\":\"260aa8c7-7538-4563-9f1a-774c868ed022\",\"instance_name\":\"spark-hist-4\",\"license_type\":\"SAPDEV\",\"origin\":\"sapcp\",\"platform\":\"sapcp\",\"region\":\"cf-eu12\",\"service_instance_id\":\"24cef021-e4c5-4d2a-a76b-330cde5a469d\",\"signature\":\"qeJH7vsQ5TVoCNMVfhkh9Rj591RaRQqSDWCONxVSILtErSlkvnlJ87Lak7a83Crn6lJnMIc7EzlwDo9TKWpgnwC4jl5c38zk3O9GpLXc/zyGyAz5mvjuwUMaAVk398myCGXeQloraWuv1tAsvmY0rYmv0cfBo6XHiHYQ+IMdrgnnZAjRG2Xy69nW4d9phPrWEoVyZtpaL064uADI7uKv+/1QX3LH7LJyl1bZT9e4Re9hnaqF7k1JvAH2bA7yvQb92fcD/kzdsFMxfK648N9yij33KfSQyRfx0OxpkNGrh843Fted4Nua1ArIxXezeU0ODbvJRKaEzGSiYXwJXtyOVkV1YdrlpZqaI4+d+vvysnQvVIuqNffBT/3x1Vl7DioFfnfsH3LJLVo5P7mGgAIX/FLGNfH91YSu4X2OScKhljtGar1bhrNyxTf2e7lHNAj4wA8mAlTevRsxiyQMDOQEgvPvDEeOC/j2stC0E0myJOauuqh8OYk1RvB/LV0gv+pecSCWOcu0XIFmoevv/uoHHnEE2QWFa5wnnymm5q4gSdfULZjtebXj7reY2Rmka3mPsTZGboHyoNwWvmVVfsaAQ7AdQSxHsTgixp2s35q3vdeXAQ2H2hQpQCWBUeWYSKwE+vOykul81wDQoFtsbgBoflP/iTIya+jjRjer0ga1ZS8=\",\"subaccount_id\":\"c49631c2-a7ab-4bf0-8cc7-05edf9a38353\",\"subdomain\":\"i538339bw-test\",\"zone_id\":\"c49631c2-a7ab-4bf0-8cc7-05edf9a38353\"}",
                          "hc.sap.com/hc-toggles": "{\"haas-new-systemdb-routing\":true}"
                      },
                      "creationTimestamp": "2023-07-02T14:21:16Z",
                      "generation": 1,
                      "labels": {
                          "btp.sap.com/parent_instance_id": "de311c96-7951-4cca-a687-27e46c69dc22",
                          "btp.sap.com/runtimeAccountID": "c49631c2-a7ab-4bf0-8cc7-05edf9a38353",
                          "btp.sap.com/runtimeGroupID": "c49631c2-a7ab-4bf0-8cc7-05edf9a38353",
                          "cf.hc.sap.com/global_account_id": "260aa8c7-7538-4563-9f1a-774c868ed022",
                          "cf.hc.sap.com/instance_guid": "24cef021-e4c5-4d2a-a76b-330cde5a469d",
                          "cf.hc.sap.com/instance_name": "spark-hist-4",
                          "cf.hc.sap.com/license_type": "SAPDEV",
                          "cf.hc.sap.com/origin": "sapcp",
                          "cf.hc.sap.com/plan_guid": "0cf69ff7-1b03-4e82-bdde-56abc70176be",
                          "cf.hc.sap.com/plan_name": "apache-spark-history",
                          "cf.hc.sap.com/platform": "sapcp",
                          "cf.hc.sap.com/region": "cf-eu12",
                          "cf.hc.sap.com/service_guid": "c25b1036-c936-0f62-069e-ff44cc60901e",
                          "cf.hc.sap.com/service_instance_id": "24cef021-e4c5-4d2a-a76b-330cde5a469d",
                          "cf.hc.sap.com/signature": "qeJH7vsQ5TVoCNMVfhkh9Rj591RaRQqSDWCONxVSILtErSlkvnlJ87Lak7a83Cr",
                          "cf.hc.sap.com/subaccount_id": "c49631c2-a7ab-4bf0-8cc7-05edf9a38353",
                          "cf.hc.sap.com/subdomain": "i538339bw-test",
                          "cf.hc.sap.com/user_guid": "sb-70448580-af73-4d82-a15f-33bf40ff73e9_b168140_service-manager",
                          "cf.hc.sap.com/zone_id": "c49631c2-a7ab-4bf0-8cc7-05edf9a38353",
                          "plans.hc.sap.com/free_tier": "false"
                      },
                      "name": "24cef021-e4c5-4d2a-a76b-330cde5a469d",
                      "namespace": "hc-broker",
                      "resourceVersion": "94664",
                      "uid": "5d9bcc1b-b84f-4245-9ea8-a75758445b3e"
                  },
                  "spec": {
                      "serviceStopped": false
                  },
                  "status": {
                    "observedGeneration": 1,
                    "endpoints": {
                        "public": "fce087a6-330b-454f-92a3-ceb9556bd0d3.compute.<region>.ondemand.com"
                    },
                    "conditions": [
                      {
                        "lastTransitionTime": "2023-05-03T15:21:22Z",
                        "message": "spec updated",
                        "observedGeneration": 1,
                        "reason": "Ready",
                        "status": true,
                        "type": "ObservedGenerationCompleted"
                      }
                    ]
                }
              },
              "details": {
                  "id": "24cef021-e4c5-4d2a-a76b-330cde5a469d",
                  "ready": false,
                  "name": "spark-hist-4",
                  "servicePlanId": "e60d22d3-77e2-4fbf-b024-e6b0f639e25c",
                  "platformId": "service-manager",
                  "context": {
                      "global_account_id": "260aa8c7-7538-4563-9f1a-774c868ed022",
                      "instance_name": "spark-hist-4",
                      "license_type": "SAPDEV",
                      "origin": "sapcp",
                      "platform": "sapcp",
                      "region": "cf-eu12",
                      "subaccount_id": "c49631c2-a7ab-4bf0-8cc7-05edf9a38353",
                      "subdomain": "i538339bw-test",
                      "zone_id": "c49631c2-a7ab-4bf0-8cc7-05edf9a38353"
                  },
                  "usable": false,
                  "createdAt": "2023-07-02T14:21:16.293151Z",
                  "updatedAt": "2023-07-02T14:21:16.293151Z",
                  "labels": {
                      "subaccount_id": [
                          "c49631c2-a7ab-4bf0-8cc7-05edf9a38353"
                      ]
                  }
              }
            }
          ]
        }
      },
      "ServiceInstanceResponse": {
        "value": {
          "resource": {
            "metadata": {
              "annotations": {
                "hana-operator.hana.sap.com/hana-v1beta1": "True",
                "hana.sap.com/tenantAdminVersion": "v1",
                "hc.sap.com/availableVersionIndicator": "95e75b1f43dc96cf19d1eef0fcb386966c78c818a3f612413c7a44646c01cce3"
              },
              "creationTimestamp": "2021-10-06T13:48:54Z",
              "generation": 2,
              "labels": {
                "cf.hc.sap.com/global_account_id": "bfbdc98c-3528-49ef-abe2-637aa130da5c",
                "cf.hc.sap.com/instance_guid": "4c923c55-166a-422e-8b3f-758c41b95b7e",
                "cf.hc.sap.com/instance_name": "testme",
                "cf.hc.sap.com/subaccount_id": "1234asd-fc70-4f4c-9126-123asdasc",
                "cf.hc.sap.com/subdomain": "hc-dev-services"
              },
              "name": "4c923c55-166a-422e-8b3f-758c41b95b7e",
              "namespace": "hc-broker",
              "resourceVersion": "67731",
              "uid": "bc923a20-6634-4a32-b270-bccbc170702d"
            },
            "spec": {
              "availabilityZonePlacement": {},
              "dataEncryption": {
                "mode": "DEDICATED_KEY"
              },
              "disasterRecoveryMode": "no_disaster_recovery",
              "edition": "cloud",
              "enabledservices": {
                "docstore": false,
                "dpserver": true,
                "scriptserver": false
              },
              "memory": 30,
              "requestedOperation": {},
              "serviceStopped": false,
              "slaLevel": "standard",
              "storage": 120,
              "templates": {
                "elasticreadnodes": [],
                "plugins": []
              },
              "updateStrategy": "withRestart",
              "vcpu": 2,
              "versionIndicator": "95e75b1f43dc96cf19d1eef0fcb386966c78c818a3f612413c7a44646c01cce3",
              "allowlistIPs": [
                "0.0.0.0/0"
              ],
              "backup": {
                "retentionDays": 37
              }
            },
            "status": {
              "conditions": [
                {
                  "lastTransitionTime": "2021-10-06T13:49:43Z",
                  "message": "Not all pods are ready, Backup not ready, Hanabroker not registered",
                  "status": "False",
                  "type": "ObservedGenerationCompleted"
                }
              ],
              "endpoints": {
                "sql": "4c923c55-166a-422e-8b3f-758c41b95b7e.hana.cluster.dev-aws.hanacloud.ondemand.com:443"
              },
              "hanaServiceResourceVersion": "75327",
              "hanaServiceStatus": {
                "DRCapable": true,
                "SMVRCapable": true,
                "ScaleOutCapable": true,
                "availabilityZonePlacement": {
                  "primaryAvailabilityZone": "eu-central-1a"
                },
                "conditions": [
                  {
                    "lastProbeTime": "1970-01-01T00:00:00Z",
                    "lastTransitionTime": "2021-10-06T13:49:05Z",
                    "message": "Not all pods are ready, Backup not ready, Hanabroker not registered",
                    "status": "False",
                    "type": "Ready"
                  },
                  {
                    "lastProbeTime": "1970-01-01T00:00:00Z",
                    "lastTransitionTime": "2021-10-06T13:49:05Z",
                    "message": "All pods are ready",
                    "status": "False",
                    "type": "ServiceStopped"
                  },
                  {
                    "lastProbeTime": "1970-01-01T00:00:00Z",
                    "lastTransitionTime": "2021-10-06T13:49:05Z",
                    "status": "False",
                    "type": "Upgrade"
                  },
                  {
                    "lastProbeTime": "1970-01-01T00:00:00Z",
                    "lastTransitionTime": "2021-10-06T13:49:05Z",
                    "status": "False",
                    "type": "Resize"
                  }
                ],
                "currentProductVersion": {
                  "version": {}
                },
                "endpoints": {
                  "sql": "4c923c55-166a-422e-8b3f-758c41b95b7e.hana.cluster.dev-aws.hanacloud.ondemand.com:443"
                },
                "hdiRegistered": "False",
                "lastOperation": {
                  "description": "{\"id\":2,\"message\":\"Not all pods are ready, Backup not ready, Hanabroker not registered\"}",
                  "lastUpdateTime": "2021-10-06T13:49:43Z",
                  "state": "Processing",
                  "type": "Update"
                },
                "nzduCapable": true,
                "observedGeneration": 3
              },
              "observedGeneration": 2
            }
          },
          "details": {
            "id": "7d7158e2-b960-4e5a-aab1-012ec3a97fdb",
            "ready": true,
            "lastOperation": {
              "id": "7ac0c366-da4c-49a4-a5f0-e8a6cb74993a",
              "ready": true,
              "type": "create",
              "state": "succeeded",
              "resourceId": "7d7158e2-b960-4e5a-aab1-012ec3a97fdb",
              "resourceType": "/v1/service_instances",
              "platformId": "85052172-ceea-4b5c-a6b0-d5e924f77fe9",
              "correlationId": "39fbc412-a2e9-498e-52aa-4a8a506c65d2",
              "reschedule": false,
              "rescheduleTimestamp": "0001-01-01T00:00:00Z",
              "deletionScheduled": "0001-01-01T00:00:00Z",
              "createdAt": "2021-09-29T14:52:24.349153Z",
              "updatedAt": "2021-09-30T08:13:24.781889Z"
            },
            "name": "hana1",
            "planId": "da6a72e8-5e6f-4a08-a21f-38922423dfef",
            "platformId": "85052172-ceea-4b5c-a6b0-d5e924f77fe9",
            "dashboarUrl": "https://hana-cockpit.cfapps.eu10.hana.ondemand.com/start?host=7d7158e2-b960-4e5a-aab1-012ec3a97fdb.hana.trial-eu10.hanacloud.ondemand.com&component=cockpit&port=443",
            "context": {
              "platform": "sapcp",
              "organizationGuid": "75b1749c-684e-4154-972b-9bfb5e2faa5f",
              "spaceGuid": "09cd4d1a-f015-4c03-a913-d2b45d30e692",
              "organizationName": "90cd51f6trial",
              "spaceName": "dev",
              "organizationAnnotations": {},
              "spaceAnnotations": {},
              "instanceName\"": "hana1",
              "instanceAnnotations": {},
              "zoneId": "eaacbdd8-b316-46d5-a6a9-d5f3e88ac800",
              "globalAccountId": "12345asd-3edf-4bfb-a2ae-549750666cc1",
              "subdomain": "90cd51f6trial",
              "region": "cf-eu10",
              "landscapeLabel": "cf-eu10",
              "crmCustomerId": "",
              "origin": "cloudfoundry",
              "licenseType": "TRIAL",
              "subaccountId": "eaacbdd8-b316-46d5-a6a9-d5f3e88ac800"
            },
            "usable": true,
            "createdAt": "2021-09-29T14:52:24.349153Z",
            "updatedAt": "2021-09-30T08:13:24.795027Z",
            "labels": {
              "subaccountId": [
                "eaacbdd8-b316-46d5-a6a9-d5f3e88ac800"
              ]
            }
          }
        }
      },
      "ServiceInstanceCreateRequest": {
        "value": {
          "name": "instanceName",
          "servicePlanId": "da6a72e8-5e6f-4a08-a21f-38922423dfef",
          "parameters": {
            "data": {
              "edition": "cloud",
              "memory": 30,
              "systempassword": "Test123"
            }
          }
        }
      },
      "ServiceInstanceUpdateRequest": {
        "value": {
          "parameters": {
            "data": {
              "serviceStopped": true
            }
          }
        }
      },
      "PluginUpgradeRequest": {
        "value": {
          "parameters": {
            "data": {
              "plugins": {
                "name":"sapibphcafl-1.0-2302-cw15.01"
              }
            }
          }
        }
      },
      "ServiceInstanceAdminPassword": {
        "value": {
            "adminPassword": "dummyPassword1234"
          }
      },
      "BadRequestGenericErrorResponse": {
        "value": {
          "error": {
            "code": "BAD_REQUEST",
            "message": "Malformed syntax or bad query",
            "target": "inventory/v1/<api-endpoint>"
          }
        }
      },
      "BadRequestIncorrectBodyErrorResponse": {
        "value": {
          "error": {
            "code": "BAD_REQUEST",
            "message": "the request body is not valid",
            "target": "inventory/v1/serviceInstances"
          }
        }
      },
      "BadRequestParametersMissingErrorResponse": {
        "value": {
          "error": {
            "code": "BAD_REQUEST",
            "message": "parameters field missing in request body",
            "target": "inventory/v1/serviceInstances"
          }
        }
      },
      "BadRequestDuplicateInstanceNameErrorResponse": {
        "value": {
          "error": {
            "code": "BAD_REQUEST",
            "message": "instance with same name exists for the current tenant",
            "target": "inventory/v1/serviceInstances"
          }
        }
      },
      "BadRequestIncorrectPlanIdErrorResponse": {
        "value": {
          "error": {
            "code": "BAD_REQUEST",
            "message": "could not find such plan",
            "target": "inventory/v1/serviceInstances"
          }
        }
      },
      "BadRequestInvalidParameterForCreateInstanceErrorResponse": {
        "value": {
          "error": {
            "code": "BAD_REQUEST",
            "message": "invalid Parameter (memory): Required for HANA",
            "target": "inventory/v1/serviceInstances"
          }
        }
      },
      "BadRequestServicePlanChangeForUpdateInstanceErrorResponse": {
        "value": {
          "error": {
            "code": "BAD_REQUEST",
            "message": "Service Plan and paramater update together not allowed",
            "target": "inventory/v1/serviceInstances"
          }
        }
      },
      "InternalErrorDeleteInstanceExistingBindingsErrorResponse": {
        "value": {
          "error": {
            "code": "INTERNAL_ERROR",
            "message": "could not delete instance due to n existing bindings",
            "target": "inventory/v1/serviceInstances"
          }
        }
      },
      "BadRequestDeleteInstanceGeneric": {
        "value": {
          "error": {
            "code": "BAD_REQUEST",
            "message": "bad request",
            "target": "inventory/v1/serviceInstances"
          }
        }
      },
      "BadRequestIncorrectParameterForGetVersionsErrorResponse": {
        "value": {
          "error": {
            "code": "BAD_REQUEST",
            "message": "invalid parameter (servicePlanName): (hana)",
            "target": "inventory/v1/serviceOfferings/hana/productVersions"
          }
        }
      },
      "UnauthorizedErrorResponse": {
        "value": {
          "error": {
            "code": "UNAUTHORIZED",
            "message": "expired token",
            "target": "inventory/v1/<api-endpoint>"
          }
        }
      },
      "ForbiddenErrorResponse": {
        "value": {
          "error": {
            "code": "UNAUTHORIZED",
            "message": "insufficient rights",
            "target": "inventory/v1/<api-endpoint>"
          }
        }
      },
      "NotFoundErrorResponse": {
        "value": {
          "error": {
            "code": "INSTANCE_NOT_FOUND",
            "message": "Service instance {serviceInstanceID} not found",
            "target": "inventory/v1/<api-endpoint>"
          }
        }
      },
      "PluginsNotFoundResponse":{
        "value": {
          "error": {
            "code": "PLUGINS_NOT_FOUND",
            "message": "Product Plugin Versions not found",
            "target": "inventory/v1/<api-endpoint>"
          }
        }
      },
      "ConflictSampleResponse": {
        "value": {
          "error": {
            "code": "CONFLICTED",
            "message": "Password Update already in progress",
            "target": "/inventory/v1/serviceInstances/bd3972e6-0808-4f39-add8-1bd04b62c361/adminPassword"
          }
        }
      },
      "ResourceConflictErrorResponse": {
        "value": {
          "error": {
            "code": "CONFLICT",
            "message": "State of the resource does not permit the request",
            "target": "inventory/v1/<api-endpoint>"
          }
        }
      },
      "UnprocessableEntityErrorResponse": {
        "value": {
          "error": {
            "code": "UNPROCESSABLE_ENTITY",
            "message": "Description: A Provision/Update operation is in progress. Please retry the operation after a few minutes."
          }
        }
      },
      "UnprocessableEntityInvalidValueErrorResponse": {
        "value": {
          "error": {
            "code": "UNPROCESSABLE_ENTITY",
            "message": "invalid Parameter (memory): Invalid value specified"
          }
        }
      },
      "UnprocessableIncompatiblePluginsUpgrade":{
        "value": {
          "error": {
            "code": "UNPROCESSABLE_ENTITY",
            "message": "There are incompatible plugins with the specified HANA version"
          }
        }
      },
      "InvalidPasswordResponse": {
        "value": {
          "error": {
            "code": "UNPROCESSABLE_ENTITY",
            "message": "invalid Password : Invalid value specified"
          }
        }
      },
      "OperationNotFoundResponse": {
        "value": {
          "error": {
            "code": "OPERATION_NOT_FOUND",
            "message": "Operation 'ims-workflow-7d4e3c56-f203-4e12-b1f7-6bca3e15da61-79cefd' not found",
            "target": "/inventory/v1/operations/ims-workflow-7d4e3c56-f203-4e12-b1f7-6bca3e15da61-79cefd"
          }
        }
      },
      "UnprocessableEntityIncorrectValueErrorResponse": {
        "value": {
          "error": {
            "code": "UNPROCESSABLE_ENTITY",
            "message": "Invalid or incomplete HANA parameters specified"
          }
        }
      },
      "ServerErrorErrorResponse": {
        "value": {
          "error": {
            "code": "INTERNAL_ERROR",
            "message": "<Specific internal error description>"
          }
        }
      }
    }
  }
}
